{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanc\\\\Documents\\\\Desenvolvimento\\\\Testes\\\\TaskTracker\\\\tasktracker\\\\src\\\\components\\\\tasks\\\\StartButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport PropTypes from 'prop-types';\nimport img from '../../images/icons8-checked-64.png';\nimport ConfirmationDialog from \"../modals/ConfirmationDialog\";\nimport TaskContext from \"../../context/task/taskContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StartButton = _ref => {\n  _s();\n\n  let {\n    index,\n    status\n  } = _ref;\n  const taskContext = useContext(TaskContext);\n  const [showConfirmationDialog, setShowConfirmationDialog] = useState(false);\n\n  const showDialog = () => {\n    setShowConfirmationDialog(show => !show);\n  };\n\n  const {\n    startTask\n  } = taskContext;\n\n  const start = () => {\n    startTask(index);\n    showDialog();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [status.value == 'Planned' && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"taskGridCommands\",\n      src: img,\n      value: index,\n      alt: \"\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"Start task by clicking here\",\n      onClick: showDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmationDialog, {\n      showMessage: showConfirmationDialog,\n      title: \"Warning\",\n      message: \"Do you really want to start this task?\",\n      positiveBtn: \"Yes\",\n      negativeBtn: \"No\",\n      positiveResponse: start,\n      negativeResponse: showDialog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StartButton, \"tAUKCemcaoI9xtBxPZfTuVLKKK0=\");\n\n_c = StartButton;\nStartButton.defaultProps = {\n  index: -1\n};\nStartButton.propTypes = {\n  index: PropTypes.number.isRequired\n};\nexport default StartButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"StartButton\");","map":{"version":3,"sources":["C:/Users/jeanc/Documents/Desenvolvimento/Testes/TaskTracker/tasktracker/src/components/tasks/StartButton.jsx"],"names":["React","useState","useContext","PropTypes","img","ConfirmationDialog","TaskContext","StartButton","index","status","taskContext","showConfirmationDialog","setShowConfirmationDialog","showDialog","show","startTask","start","value","defaultProps","propTypes","number","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,oCAAhB;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;;;AAEA,MAAMC,WAAW,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAoB;AACvC,QAAMC,WAAW,GAAGR,UAAU,CAACI,WAAD,CAA9B;AACA,QAAM,CAACK,sBAAD,EAAyBC,yBAAzB,IAAsDX,QAAQ,CAAC,KAAD,CAApE;;AAEA,QAAMY,UAAU,GAAG,MAAM;AACvBD,IAAAA,yBAAyB,CAACE,IAAI,IAAI,CAACA,IAAV,CAAzB;AACD,GAFD;;AAIA,QAAM;AAACC,IAAAA;AAAD,MAAcL,WAApB;;AAEA,QAAMM,KAAK,GAAG,MAAM;AAClBD,IAAAA,SAAS,CAACP,KAAD,CAAT;AACAK,IAAAA,UAAU;AACX,GAHD;;AAKA,sBACE;AAAA,eACIJ,MAAM,CAACQ,KAAP,IAAgB,SAAhB,iBACA;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,GAAG,EAAEb,GAAvC;AAA4C,MAAA,KAAK,EAAEI,KAAnD;AAA0D,MAAA,GAAG,EAAC,EAA9D;AACE,qBAAY,SADd;AACwB,wBAAe,KADvC;AAC6C,MAAA,KAAK,EAAC,6BADnD;AACiF,MAAA,OAAO,EAAEK;AAD1F;AAAA;AAAA;AAAA;AAAA,YAFJ,eAME,QAAC,kBAAD;AAAoB,MAAA,WAAW,EAAEF,sBAAjC;AAAyD,MAAA,KAAK,EAAC,SAA/D;AAAyE,MAAA,OAAO,EAAC,wCAAjF;AAA0H,MAAA,WAAW,EAAC,KAAtI;AAA4I,MAAA,WAAW,EAAC,IAAxJ;AAA6J,MAAA,gBAAgB,EAAEK,KAA/K;AAAsL,MAAA,gBAAgB,EAAEH;AAAxM;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD,CAzBD;;GAAMN,W;;KAAAA,W;AA2BNA,WAAW,CAACW,YAAZ,GAA2B;AACzBV,EAAAA,KAAK,EAAE,CAAC;AADiB,CAA3B;AAIAD,WAAW,CAACY,SAAZ,GAAwB;AACtBX,EAAAA,KAAK,EAAEL,SAAS,CAACiB,MAAV,CAAiBC;AADF,CAAxB;AAIA,eAAed,WAAf","sourcesContent":["import React, {useState, useContext} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport img from '../../images/icons8-checked-64.png';\r\nimport ConfirmationDialog from \"../modals/ConfirmationDialog\";\r\nimport TaskContext from \"../../context/task/taskContext\";\r\n\r\nconst StartButton = ({index, status}) => {\r\n  const taskContext = useContext(TaskContext);\r\n  const [showConfirmationDialog, setShowConfirmationDialog] = useState(false);\r\n  \r\n  const showDialog = () => {\r\n    setShowConfirmationDialog(show => !show);\r\n  }\r\n\r\n  const {startTask} = taskContext;\r\n\r\n  const start = () => {\r\n    startTask(index);\r\n    showDialog();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      { status.value == 'Planned' && \r\n        <img className='taskGridCommands' src={img} value={index} alt='' \r\n          data-toggle=\"tooltip\" data-placement=\"top\" title=\"Start task by clicking here\" onClick={showDialog}></img>    \r\n      }\r\n      \r\n      <ConfirmationDialog showMessage={showConfirmationDialog} title=\"Warning\" message=\"Do you really want to start this task?\" positiveBtn='Yes' negativeBtn='No' positiveResponse={start} negativeResponse={showDialog} />     \r\n    </>\r\n  );\r\n};\r\n\r\nStartButton.defaultProps = {  \r\n  index: -1\r\n};\r\n\r\nStartButton.propTypes = {  \r\n  index: PropTypes.number.isRequired\r\n}\r\n\r\nexport default StartButton;"]},"metadata":{},"sourceType":"module"}