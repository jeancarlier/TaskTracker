{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanc\\\\Documents\\\\Desenvolvimento\\\\Testes\\\\TaskTracker\\\\tasktracker\\\\src\\\\components\\\\tasks\\\\TaskGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport State from \"./State\";\nimport TaskDeleteButton from \"./TaskDeleteButton\";\nimport TaskCompleteButton from \"./TaskCompleteButton\";\nimport TaskContext from '../../context/task/taskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskGrid = () => {\n  _s();\n\n  const taskContext = useContext(TaskContext);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    taskContext.getTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"taskGrid table table-striped table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Estimate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: taskContext.tasks.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.description\n            }, data.description, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.estimate + ' hrs'\n            }, data.estimate, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(State, {\n                state: taskContext.getStatus(data)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this)\n            }, data.state, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"gridActionColumn\",\n              children: [/*#__PURE__*/_jsxDEV(TaskDeleteButton, {\n                index: data.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TaskCompleteButton, {\n                index: data.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this)]\n            }, 'action', true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, data.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this))\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, 'taskTable', true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(TaskGrid, \"/zd5gNfZMZAnb7bMpUHXxWJ8SF0=\");\n\n_c = TaskGrid;\nexport default TaskGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskGrid\");","map":{"version":3,"sources":["C:/Users/jeanc/Documents/Desenvolvimento/Testes/TaskTracker/tasktracker/src/components/tasks/TaskGrid.jsx"],"names":["React","useState","useContext","useEffect","State","TaskDeleteButton","TaskCompleteButton","TaskContext","TaskGrid","taskContext","tasks","setTasks","getTasks","map","data","name","description","estimate","getStatus","state","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,WAAW,GAAGP,UAAU,CAACK,WAAD,CAA9B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,WAAW,CAACG,QAAZ;AACD,GAFQ,EAEP,EAFO,CAAT;AAIA,sBACE;AAAA,2BACE;AAAwB,MAAA,SAAS,EAAC,6CAAlC;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,+BACE;AAAA,oBACCH,WAAW,CAACC,KAAZ,CAAkBG,GAAlB,CAAsBC,IAAI,iBACzB;AAAA,oCACE;AAAA,wBAAMA,IAAI,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAA4BD,IAAI,CAACE;AAAjC,eAASF,IAAI,CAACE,WAAd;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAyBF,IAAI,CAACG,QAAL,GAAgB;AAAzC,eAASH,IAAI,CAACG,QAAd;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,qCAAsB,QAAC,KAAD;AAAO,gBAAA,KAAK,EAAER,WAAW,CAACS,SAAZ,CAAsBJ,IAAtB;AAAd;AAAA;AAAA;AAAA;AAAA;AAAtB,eAASA,IAAI,CAACK,KAAd;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAkB,cAAA,SAAS,EAAC,kBAA5B;AAAA,sCACE,QAAC,gBAAD;AAAkB,gBAAA,KAAK,EAAEL,IAAI,CAACM;AAA9B;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,kBAAD;AAAoB,gBAAA,KAAK,EAAEN,IAAI,CAACM;AAAhC;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA,eAAS,QAAT;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA,aAASN,IAAI,CAACM,EAAd;AAAA;AAAA;AAAA;AAAA,kBADD;AADD;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA,OAAW,WAAX;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgCD,CAxCD;;GAAMZ,Q;;KAAAA,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React, {useState, useContext, useEffect} from \"react\";\r\nimport State from \"./State\"\r\nimport TaskDeleteButton from \"./TaskDeleteButton\";\r\nimport TaskCompleteButton from \"./TaskCompleteButton\";\r\nimport TaskContext from '../../context/task/taskContext';\r\n\r\n\r\n\r\nconst TaskGrid = () => {\r\n  const taskContext = useContext(TaskContext);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    taskContext.getTasks();\r\n  },[]);\r\n\r\n  return (\r\n    <>\r\n      <table key='taskTable'  className='taskGrid table table-striped table-bordered' >\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Description</th>\r\n            <th>Estimate</th>\r\n            <th>State</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>     \r\n        <tbody>\r\n          <>\r\n          {taskContext.tasks.map(data => (            \r\n            <tr key={data.id}>                \r\n              <td >{data.name}</td>\r\n              <td key={data.description}>{data.description}</td>\r\n              <td key={data.estimate}>{data.estimate + ' hrs'}</td>\r\n              <td key={data.state} ><State state={taskContext.getStatus(data)}/></td> \r\n              <td key ='action' className='gridActionColumn'>\r\n                <TaskDeleteButton index={data.id} /> \r\n                <TaskCompleteButton index={data.id} />\r\n              </td> \r\n            </tr>            \r\n          ))}\r\n          </>\r\n          \r\n        </tbody> \r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskGrid;"]},"metadata":{},"sourceType":"module"}