{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanc\\\\Documents\\\\Desenvolvimento\\\\Testes\\\\TaskTracker\\\\tasktracker\\\\src\\\\components\\\\tasks\\\\AddButton.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport PropTypes from 'prop-types';\nimport AddTaskForm from './AddTaskForm';\nimport { Button, Modal } from 'react-bootstrap';\nimport TaskContext from \"../../context/task/taskContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddButton = _ref => {\n  _s();\n\n  let {\n    title\n  } = _ref;\n  const taskContext = useContext(TaskContext);\n  const [showModal, setShowModal] = useState(false);\n\n  const openModal = () => {\n    setShowModal(prev => !prev);\n  };\n\n  const {\n    addTask,\n    state\n  } = taskContext;\n\n  const addNewTask = () => {\n    if (state.name == '' || state.description == '' || state.estimate == 0) {\n      return null;\n    }\n\n    addTask();\n    openModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: openModal,\n      className: \"btn btn-primary taskAddButton\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Add a new task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"needs-validation\",\n          children: /*#__PURE__*/_jsxDEV(AddTaskForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          onClick: addNewTask,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: openModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddButton, \"E4SdJH3OKpR9yw9hOaby6VXweT0=\");\n\n_c = AddButton;\nAddButton.defaultProps = {\n  title: \"Add Task\"\n};\nAddButton.propTypes = {\n  title: PropTypes.string.isRequired\n};\nexport default AddButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddButton\");","map":{"version":3,"sources":["C:/Users/jeanc/Documents/Desenvolvimento/Testes/TaskTracker/tasktracker/src/components/tasks/AddButton.jsx"],"names":["React","useState","useContext","PropTypes","AddTaskForm","Button","Modal","TaskContext","AddButton","title","taskContext","showModal","setShowModal","openModal","prev","addTask","state","addNewTask","name","description","estimate","defaultProps","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,iBAA5B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;;;AAEA,MAAMC,SAAS,GAAG,QAAa;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAC7B,QAAMC,WAAW,GAAGR,UAAU,CAACK,WAAD,CAA9B;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMY,SAAS,GAAG,MAAM;AACtBD,IAAAA,YAAY,CAACE,IAAI,IAAI,CAACA,IAAV,CAAZ;AACD,GAFD;;AAIA,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAmBN,WAAzB;;AAEA,QAAMO,UAAU,GAAG,MAAM;AACvB,QAAID,KAAK,CAACE,IAAN,IAAc,EAAd,IAAoBF,KAAK,CAACG,WAAN,IAAqB,EAAzC,IAA+CH,KAAK,CAACI,QAAN,IAAkB,CAArE,EAAuE;AACrE,aAAO,IAAP;AACD;;AACDL,IAAAA,OAAO;AACPF,IAAAA,SAAS;AACV,GAND;;AAQA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEA,SAAjB;AAA4B,MAAA,SAAS,EAAC,+BAAtC;AAAA,gBAAuEJ;AAAvE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEE,SAAb;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,kBAAhB;AAAA,iCACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eASE,QAAC,KAAD,CAAO,MAAP;AAAA,gCAEE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,SAA9B;AAAwC,UAAA,OAAO,EAAEM,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAEJ,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAwBD,CA1CD;;GAAML,S;;KAAAA,S;AA4CNA,SAAS,CAACa,YAAV,GAAyB;AACvBZ,EAAAA,KAAK,EAAE;AADgB,CAAzB;AAIAD,SAAS,CAACc,SAAV,GAAsB;AACpBb,EAAAA,KAAK,EAAEN,SAAS,CAACoB,MAAV,CAAiBC;AADJ,CAAtB;AAIA,eAAehB,SAAf","sourcesContent":["import React, {useState, useContext} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport AddTaskForm from './AddTaskForm';\r\nimport {Button, Modal} from 'react-bootstrap';\r\nimport TaskContext from \"../../context/task/taskContext\";\r\n\r\nconst AddButton = ({title}) => {\r\n  const taskContext = useContext(TaskContext);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setShowModal(prev => !prev);\r\n  }\r\n\r\n  const {addTask, state} = taskContext;\r\n\r\n  const addNewTask = () => {\r\n    if (state.name == '' || state.description == '' || state.estimate == 0){\r\n      return null;\r\n    }\r\n    addTask();\r\n    openModal();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={openModal} className='btn btn-primary taskAddButton'>{title}</Button>\r\n      <Modal show={showModal}>\r\n        <Modal.Header>\r\n          Add a new task\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form className='needs-validation' >\r\n            <AddTaskForm></AddTaskForm>                    \r\n          </form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n\r\n          <Button type='submit' variant='primary' onClick={addNewTask}>\r\n            Save\r\n          </Button>\r\n          <Button variant='secondary' onClick={openModal}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>      \r\n    </>\r\n  );\r\n};\r\n\r\nAddButton.defaultProps = {\r\n  title: \"Add Task\"\r\n};\r\n\r\nAddButton.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default AddButton;"]},"metadata":{},"sourceType":"module"}