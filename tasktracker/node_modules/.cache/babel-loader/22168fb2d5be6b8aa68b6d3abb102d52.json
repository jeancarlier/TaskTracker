{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanc\\\\Documents\\\\Desenvolvimento\\\\Testes\\\\TaskTracker\\\\tasktracker\\\\src\\\\context\\\\task\\\\TaskState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport TaskContext from './taskContext';\nimport TaskReducer from './taskReducer';\nimport data from \"../../data.json\";\nimport { GET_TASKS, SET_LOADING, ADD_TASK, DELETE_TASK, CONCLUDE_TASK, LOAD_SUMMARY } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskState = props => {\n  _s();\n\n  const initialState = {\n    tasks: [],\n    newTask: {\n      id: null,\n      name: '',\n      description: '',\n      startDate: null,\n      estimate: 0,\n      endDate: null\n    },\n    percentageConcluded: 0,\n    totalHours: 0,\n    totalCompletedHours: 0,\n    totalInProcessHours: 0,\n    totalPlannedHours: 0,\n    loading: false\n  };\n  const [state, dispatch] = useReducer(TaskReducer, initialState); //Get tasks\n\n  const getTasks = () => {\n    setLoading(); //Here we can call axios getting from server REST API. I'm using local data just to present \n\n    const tasks = data;\n    dispatch({\n      type: GET_TASKS,\n      payload: tasks\n    });\n  }; //Get Task status\n\n\n  const getStatus = function (record) {\n    if (record.endDate != null) {\n      return {\n        value: 'Completed',\n        colorClass: 'bg-green'\n      };\n    }\n\n    if (record.startDate == null) {\n      return {\n        value: 'Planned',\n        colorClass: 'bg-red'\n      };\n    }\n\n    return {\n      value: 'In Process',\n      colorClass: 'bg-yellow'\n    };\n  }; //Add task\n\n\n  const addTask = () => {\n    setLoading();\n\n    if (state.tasks && state.newTask !== {}) {\n      const newArr = [...state.tasks];\n      state.newTask.id = state.tasks.length + 1;\n      state.tasks = newArr.concat(state.newTask);\n    }\n\n    dispatch({\n      type: ADD_TASK,\n      payload: state.tasks\n    });\n  }; //Check form validity\n\n\n  const checkFormValidity = () => {\n    if (state.newTask.name === '' || state.newTask.description === '' || state.newTask.estimate === 0) {\n      var myform = document.getElementById(\"addTaskForm\")[0];\n\n      if (!myform.checkValidity()) {\n        if (myform.reportValidity) {\n          myform.reportValidity();\n        }\n      }\n\n      let inputComponent = document.getElementById('taskName');\n\n      if (state.newTask.name === '') {\n        inputComponent.classList.add('is-invalid');\n      } else {\n        inputComponent.classList.remove('is-invalid');\n      }\n\n      inputComponent = document.getElementById('taskDescription');\n\n      if (state.newTask.description === '') {\n        inputComponent.classList.add('is-invalid');\n      } else {\n        inputComponent.classList.remove('is-invalid');\n      }\n\n      inputComponent = document.getElementById('taskEstimate');\n\n      if (state.newTask.estimate === 0) {\n        inputComponent.classList.add('is-invalid');\n      } else {\n        inputComponent.classList.remove('is-invalid');\n      }\n\n      return false;\n    }\n\n    let inputComponent = document.getElementById('taskName');\n    inputComponent.classList.remove('is-invalid');\n    inputComponent = document.getElementById('taskDescription');\n    inputComponent.classList.remove('is-invalid');\n    inputComponent = document.getElementById('taskEstimate');\n    inputComponent.classList.remove('is-invalid');\n    return true;\n  }; //Delete task\n\n\n  const deleteTask = index => {\n    setLoading();\n\n    if (state.tasks) {\n      let newArr = [...state.tasks];\n      newArr = state.tasks.filter(t => t.id !== index);\n      state.tasks = newArr;\n    }\n\n    dispatch({\n      type: DELETE_TASK,\n      payload: state.tasks\n    });\n  }; //Conclude task\n\n\n  const concludeTask = index => {\n    setLoading();\n\n    if (state.tasks) {\n      let newArr = [...state.tasks];\n      const ind = state.tasks.findIndex(t => t.id === index);\n      newArr[ind].endDate = new Date();\n      state.tasks = newArr;\n    }\n\n    dispatch({\n      type: CONCLUDE_TASK,\n      payload: state.tasks\n    });\n  }; //Start task\n\n\n  const startTask = index => {\n    setLoading();\n\n    if (state.tasks) {\n      let newArr = [...state.tasks];\n      const ind = state.tasks.findIndex(t => t.id === index);\n      newArr[ind].startDate = new Date();\n      state.tasks = newArr;\n    }\n\n    dispatch({\n      type: CONCLUDE_TASK,\n      payload: state.tasks\n    });\n  }; //Load tasks Summary\n\n\n  const loadProjectSummary = () => {\n    let summary = {\n      percentageConcluded: 0,\n      totalHours: 0,\n      totalCompletedHours: 0,\n      totalInProcessHours: 0,\n      totalPlannedHours: 0\n    };\n\n    if (state.tasks && state.tasks.length > 0) {\n      summary.totalHours = state.tasks.length;\n      summary.percentageConcluded = Math.round(state.tasks.filter(task => task.endDate !== null).length / state.tasks.length * 100, 2);\n      summary.totalCompletedHours = state.tasks.filter(task => task.endDate !== null).length;\n      summary.totalInProcessHours = state.tasks.filter(task => task.endDate === null && task.startDate !== null).length;\n      summary.totalPlannedHours = state.tasks.filter(task => task.endDate === null && task.startDate === null).length;\n    }\n\n    dispatch({\n      type: LOAD_SUMMARY,\n      payload: summary\n    });\n  }; //Set loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks: state.tasks,\n      newTask: state.newTask,\n      loading: state.loading,\n      percentageConcluded: state.percentageConcluded,\n      totalHours: state.totalHours,\n      totalCompletedHours: state.totalCompletedHours,\n      totalInProcessHours: state.totalInProcessHours,\n      totalPlannedHours: state.totalPlannedHours,\n      getTasks,\n      getStatus,\n      deleteTask,\n      concludeTask,\n      addTask,\n      startTask,\n      checkFormValidity,\n      loadProjectSummary\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TaskState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TaskState;\nexport default TaskState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"sources":["C:/Users/jeanc/Documents/Desenvolvimento/Testes/TaskTracker/tasktracker/src/context/task/TaskState.js"],"names":["React","useReducer","TaskContext","TaskReducer","data","GET_TASKS","SET_LOADING","ADD_TASK","DELETE_TASK","CONCLUDE_TASK","LOAD_SUMMARY","TaskState","props","initialState","tasks","newTask","id","name","description","startDate","estimate","endDate","percentageConcluded","totalHours","totalCompletedHours","totalInProcessHours","totalPlannedHours","loading","state","dispatch","getTasks","setLoading","type","payload","getStatus","record","value","colorClass","addTask","newArr","length","concat","checkFormValidity","myform","document","getElementById","checkValidity","reportValidity","inputComponent","classList","add","remove","deleteTask","index","filter","t","concludeTask","ind","findIndex","Date","startTask","loadProjectSummary","summary","Math","round","task","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AAEA,SACEC,SADF,EAEEC,WAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,YANF,QAOO,UAPP;;;AASA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACzB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,EAAE,EAAE,IADG;AAEPC,MAAAA,IAAI,EAAE,EAFC;AAGPC,MAAAA,WAAW,EAAE,EAHN;AAIPC,MAAAA,SAAS,EAAE,IAJJ;AAKPC,MAAAA,QAAQ,EAAE,CALH;AAMPC,MAAAA,OAAO,EAAE;AANF,KAFU;AAUnBC,IAAAA,mBAAmB,EAAE,CAVF;AAWnBC,IAAAA,UAAU,EAAE,CAXO;AAYnBC,IAAAA,mBAAmB,EAAE,CAZF;AAanBC,IAAAA,mBAAmB,EAAE,CAbF;AAcnBC,IAAAA,iBAAiB,EAAE,CAdA;AAenBC,IAAAA,OAAO,EAAE;AAfU,GAArB;AAkBA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB5B,UAAU,CAACE,WAAD,EAAcU,YAAd,CAApC,CAnByB,CAqBzB;;AACA,QAAMiB,QAAQ,GAAG,MAAM;AACrBC,IAAAA,UAAU,GADW,CAGrB;;AACA,UAAMjB,KAAK,GAAGV,IAAd;AAEAyB,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE3B,SADC;AAEP4B,MAAAA,OAAO,EAAEnB;AAFF,KAAD,CAAR;AAID,GAVD,CAtByB,CAkCzB;;;AACA,QAAMoB,SAAS,GAAG,UAASC,MAAT,EAAgB;AAEhC,QAAIA,MAAM,CAACd,OAAP,IAAkB,IAAtB,EAA2B;AACzB,aAAO;AAACe,QAAAA,KAAK,EAAE,WAAR;AAAqBC,QAAAA,UAAU,EAAE;AAAjC,OAAP;AACD;;AAED,QAAIF,MAAM,CAAChB,SAAP,IAAoB,IAAxB,EAA6B;AAC3B,aAAO;AAACiB,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,UAAU,EAAE;AAA/B,OAAP;AACD;;AAED,WAAO;AAACD,MAAAA,KAAK,EAAE,YAAR;AAAsBC,MAAAA,UAAU,EAAE;AAAlC,KAAP;AAED,GAZD,CAnCyB,CAiDzB;;;AACA,QAAMC,OAAO,GAAG,MAAM;AACpBP,IAAAA,UAAU;;AAEV,QAAIH,KAAK,CAACd,KAAN,IAAec,KAAK,CAACb,OAAN,KAAkB,EAArC,EAAyC;AACvC,YAAMwB,MAAM,GAAG,CAAC,GAAGX,KAAK,CAACd,KAAV,CAAf;AACAc,MAAAA,KAAK,CAACb,OAAN,CAAcC,EAAd,GAAmBY,KAAK,CAACd,KAAN,CAAY0B,MAAZ,GAAqB,CAAxC;AACAZ,MAAAA,KAAK,CAACd,KAAN,GAAcyB,MAAM,CAACE,MAAP,CAAcb,KAAK,CAACb,OAApB,CAAd;AACD;;AAEDc,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEzB,QADC;AAEP0B,MAAAA,OAAO,EAAEL,KAAK,CAACd;AAFR,KAAD,CAAR;AAKD,GAdD,CAlDyB,CAkEzB;;;AACA,QAAM4B,iBAAiB,GAAG,MAAM;AAC9B,QAAId,KAAK,CAACb,OAAN,CAAcE,IAAd,KAAuB,EAAvB,IAA6BW,KAAK,CAACb,OAAN,CAAcG,WAAd,KAA8B,EAA3D,IAAiEU,KAAK,CAACb,OAAN,CAAcK,QAAd,KAA2B,CAAhG,EAAkG;AAEhG,UAAIuB,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuC,CAAvC,CAAb;;AACA,UAAI,CAACF,MAAM,CAACG,aAAP,EAAL,EAA6B;AACzB,YAAIH,MAAM,CAACI,cAAX,EAA2B;AACvBJ,UAAAA,MAAM,CAACI,cAAP;AACH;AACJ;;AACD,UAAIC,cAAc,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAArB;;AACA,UAAGjB,KAAK,CAACb,OAAN,CAAcE,IAAd,KAAuB,EAA1B,EAA6B;AAC3B+B,QAAAA,cAAc,CAACC,SAAf,CAAyBC,GAAzB,CAA6B,YAA7B;AACD,OAFD,MAEK;AACHF,QAAAA,cAAc,CAACC,SAAf,CAAyBE,MAAzB,CAAgC,YAAhC;AACD;;AAEDH,MAAAA,cAAc,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAjB;;AACA,UAAGjB,KAAK,CAACb,OAAN,CAAcG,WAAd,KAA8B,EAAjC,EAAoC;AAClC8B,QAAAA,cAAc,CAACC,SAAf,CAAyBC,GAAzB,CAA6B,YAA7B;AACD,OAFD,MAEK;AACHF,QAAAA,cAAc,CAACC,SAAf,CAAyBE,MAAzB,CAAgC,YAAhC;AACD;;AAEDH,MAAAA,cAAc,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAjB;;AACA,UAAGjB,KAAK,CAACb,OAAN,CAAcK,QAAd,KAA2B,CAA9B,EAAgC;AAC9B4B,QAAAA,cAAc,CAACC,SAAf,CAAyBC,GAAzB,CAA6B,YAA7B;AACD,OAFD,MAEK;AACHF,QAAAA,cAAc,CAACC,SAAf,CAAyBE,MAAzB,CAAgC,YAAhC;AACD;;AAED,aAAO,KAAP;AACD;;AAED,QAAIH,cAAc,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAArB;AACAG,IAAAA,cAAc,CAACC,SAAf,CAAyBE,MAAzB,CAAgC,YAAhC;AAEAH,IAAAA,cAAc,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAjB;AACAG,IAAAA,cAAc,CAACC,SAAf,CAAyBE,MAAzB,CAAgC,YAAhC;AAEAH,IAAAA,cAAc,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAjB;AACAG,IAAAA,cAAc,CAACC,SAAf,CAAyBE,MAAzB,CAAgC,YAAhC;AAEA,WAAO,IAAP;AACD,GA3CD,CAnEyB,CAgHzB;;;AACA,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5BtB,IAAAA,UAAU;;AAEV,QAAIH,KAAK,CAACd,KAAV,EAAiB;AACf,UAAIyB,MAAM,GAAG,CAAC,GAAGX,KAAK,CAACd,KAAV,CAAb;AACAyB,MAAAA,MAAM,GAAGX,KAAK,CAACd,KAAN,CAAYwC,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,CAACvC,EAAF,KAASqC,KAAjC,CAAT;AACAzB,MAAAA,KAAK,CAACd,KAAN,GAAcyB,MAAd;AACD;;AAEDV,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAExB,WADC;AAEPyB,MAAAA,OAAO,EAAEL,KAAK,CAACd;AAFR,KAAD,CAAR;AAID,GAbD,CAjHyB,CAgIzB;;;AACA,QAAM0C,YAAY,GAAIH,KAAD,IAAW;AAC9BtB,IAAAA,UAAU;;AAEV,QAAIH,KAAK,CAACd,KAAV,EAAiB;AACf,UAAIyB,MAAM,GAAG,CAAC,GAAGX,KAAK,CAACd,KAAV,CAAb;AACA,YAAM2C,GAAG,GAAG7B,KAAK,CAACd,KAAN,CAAY4C,SAAZ,CAAsBH,CAAC,IAAIA,CAAC,CAACvC,EAAF,KAASqC,KAApC,CAAZ;AACAd,MAAAA,MAAM,CAACkB,GAAD,CAAN,CAAYpC,OAAZ,GAAsB,IAAIsC,IAAJ,EAAtB;AACA/B,MAAAA,KAAK,CAACd,KAAN,GAAcyB,MAAd;AACD;;AAEDV,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEvB,aADC;AAEPwB,MAAAA,OAAO,EAAEL,KAAK,CAACd;AAFR,KAAD,CAAR;AAID,GAdD,CAjIyB,CAiJzB;;;AACA,QAAM8C,SAAS,GAAIP,KAAD,IAAW;AAC3BtB,IAAAA,UAAU;;AAEV,QAAIH,KAAK,CAACd,KAAV,EAAiB;AACf,UAAIyB,MAAM,GAAG,CAAC,GAAGX,KAAK,CAACd,KAAV,CAAb;AACA,YAAM2C,GAAG,GAAG7B,KAAK,CAACd,KAAN,CAAY4C,SAAZ,CAAsBH,CAAC,IAAIA,CAAC,CAACvC,EAAF,KAASqC,KAApC,CAAZ;AACAd,MAAAA,MAAM,CAACkB,GAAD,CAAN,CAAYtC,SAAZ,GAAwB,IAAIwC,IAAJ,EAAxB;AACA/B,MAAAA,KAAK,CAACd,KAAN,GAAcyB,MAAd;AACD;;AAEDV,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEvB,aADC;AAEPwB,MAAAA,OAAO,EAAEL,KAAK,CAACd;AAFR,KAAD,CAAR;AAID,GAdD,CAlJyB,CAkKzB;;;AACA,QAAM+C,kBAAkB,GAAG,MAAM;AAC/B,QAAIC,OAAO,GAAG;AACZxC,MAAAA,mBAAmB,EAAE,CADT;AAEZC,MAAAA,UAAU,EAAE,CAFA;AAGZC,MAAAA,mBAAmB,EAAE,CAHT;AAIZC,MAAAA,mBAAmB,EAAE,CAJT;AAKZC,MAAAA,iBAAiB,EAAE;AALP,KAAd;;AAQA,QAAIE,KAAK,CAACd,KAAN,IAAec,KAAK,CAACd,KAAN,CAAY0B,MAAZ,GAAqB,CAAxC,EAA0C;AACxCsB,MAAAA,OAAO,CAACvC,UAAR,GAAqBK,KAAK,CAACd,KAAN,CAAY0B,MAAjC;AACAsB,MAAAA,OAAO,CAACxC,mBAAR,GAA8ByC,IAAI,CAACC,KAAL,CAAYpC,KAAK,CAACd,KAAN,CAAYwC,MAAZ,CAAmBW,IAAI,IAAIA,IAAI,CAAC5C,OAAL,KAAiB,IAA5C,EAAkDmB,MAAlD,GAA2DZ,KAAK,CAACd,KAAN,CAAY0B,MAAxE,GAAkF,GAA7F,EAAiG,CAAjG,CAA9B;AACAsB,MAAAA,OAAO,CAACtC,mBAAR,GAA8BI,KAAK,CAACd,KAAN,CAAYwC,MAAZ,CAAmBW,IAAI,IAAIA,IAAI,CAAC5C,OAAL,KAAiB,IAA5C,EAAkDmB,MAAhF;AACAsB,MAAAA,OAAO,CAACrC,mBAAR,GAA8BG,KAAK,CAACd,KAAN,CAAYwC,MAAZ,CAAmBW,IAAI,IAAIA,IAAI,CAAC5C,OAAL,KAAiB,IAAjB,IAAyB4C,IAAI,CAAC9C,SAAL,KAAmB,IAAvE,EAA6EqB,MAA3G;AACAsB,MAAAA,OAAO,CAACpC,iBAAR,GAA4BE,KAAK,CAACd,KAAN,CAAYwC,MAAZ,CAAmBW,IAAI,IAAIA,IAAI,CAAC5C,OAAL,KAAiB,IAAjB,IAAyB4C,IAAI,CAAC9C,SAAL,KAAmB,IAAvE,EAA6EqB,MAAzG;AACD;;AAEDX,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEtB,YADC;AAEPuB,MAAAA,OAAO,EAAE6B;AAFF,KAAD,CAAR;AAID,GArBD,CAnKyB,CA0LzB;;;AACA,QAAM/B,UAAU,GAAG,MAAMF,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAE1B;AAAP,GAAD,CAAjC;;AAEA,sBAAO,QAAC,WAAD,CAAa,QAAb;AACL,IAAA,KAAK,EAAE;AACLQ,MAAAA,KAAK,EAAEc,KAAK,CAACd,KADR;AAELC,MAAAA,OAAO,EAAEa,KAAK,CAACb,OAFV;AAGLY,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAHV;AAILL,MAAAA,mBAAmB,EAAEM,KAAK,CAACN,mBAJtB;AAKLC,MAAAA,UAAU,EAAEK,KAAK,CAACL,UALb;AAMLC,MAAAA,mBAAmB,EAAEI,KAAK,CAACJ,mBANtB;AAOLC,MAAAA,mBAAmB,EAAEG,KAAK,CAACH,mBAPtB;AAQLC,MAAAA,iBAAiB,EAAEE,KAAK,CAACF,iBARpB;AASLI,MAAAA,QATK;AAULI,MAAAA,SAVK;AAWLkB,MAAAA,UAXK;AAYLI,MAAAA,YAZK;AAaLlB,MAAAA,OAbK;AAcLsB,MAAAA,SAdK;AAeLlB,MAAAA,iBAfK;AAgBLmB,MAAAA;AAhBK,KADF;AAAA,cAoBJjD,KAAK,CAACsD;AApBF;AAAA;AAAA;AAAA;AAAA,UAAP;AAuBD,CApND;;GAAMvD,S;;KAAAA,S;AAsNN,eAAeA,SAAf","sourcesContent":["import React, {useReducer} from 'react';\r\nimport TaskContext from './taskContext';\r\nimport TaskReducer from './taskReducer';\r\nimport data from \"../../data.json\";\r\n\r\nimport {\r\n  GET_TASKS,\r\n  SET_LOADING,\r\n  ADD_TASK,\r\n  DELETE_TASK,\r\n  CONCLUDE_TASK,\r\n  LOAD_SUMMARY\r\n} from '../types';\r\n\r\nconst TaskState = props => {\r\n  const initialState = {\r\n    tasks: [],\r\n    newTask: {\r\n      id: null,\r\n      name: '',\r\n      description: '',\r\n      startDate: null,\r\n      estimate: 0,\r\n      endDate: null\r\n    },\r\n    percentageConcluded: 0,\r\n    totalHours: 0,\r\n    totalCompletedHours: 0,\r\n    totalInProcessHours: 0,\r\n    totalPlannedHours: 0,\r\n    loading: false\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(TaskReducer, initialState);\r\n\r\n  //Get tasks\r\n  const getTasks = () => {\r\n    setLoading();\r\n    \r\n    //Here we can call axios getting from server REST API. I'm using local data just to present \r\n    const tasks = data;\r\n    \r\n    dispatch({\r\n      type: GET_TASKS,\r\n      payload: tasks   \r\n    });        \r\n  }\r\n\r\n  //Get Task status\r\n  const getStatus = function(record){\r\n\r\n    if (record.endDate != null){\r\n      return {value: 'Completed', colorClass: 'bg-green'};\r\n    }\r\n  \r\n    if (record.startDate == null){\r\n      return {value: 'Planned', colorClass: 'bg-red'};\r\n    }\r\n  \r\n    return {value: 'In Process', colorClass: 'bg-yellow'};\r\n  \r\n  };\r\n\r\n  //Add task\r\n  const addTask = () => {\r\n    setLoading();        \r\n    \r\n    if (state.tasks && state.newTask !== {}) {\r\n      const newArr = [...state.tasks];\r\n      state.newTask.id = state.tasks.length + 1;\r\n      state.tasks = newArr.concat(state.newTask);\r\n    }\r\n        \r\n    dispatch({\r\n      type: ADD_TASK,\r\n      payload: state.tasks\r\n    });\r\n    \r\n  }\r\n\r\n  //Check form validity\r\n  const checkFormValidity = () => {    \r\n    if (state.newTask.name === '' || state.newTask.description === '' || state.newTask.estimate === 0){      \r\n\r\n      var myform = document.getElementById(\"addTaskForm\")[0];\r\n      if (!myform.checkValidity()) {\r\n          if (myform.reportValidity) {\r\n              myform.reportValidity();              \r\n          }\r\n      }\r\n      let inputComponent = document.getElementById('taskName');\r\n      if(state.newTask.name === ''){               \r\n        inputComponent.classList.add('is-invalid');\r\n      }else{        \r\n        inputComponent.classList.remove('is-invalid');\r\n      }\r\n\r\n      inputComponent = document.getElementById('taskDescription');\r\n      if(state.newTask.description === ''){      \r\n        inputComponent.classList.add('is-invalid');\r\n      }else{\r\n        inputComponent.classList.remove('is-invalid');\r\n      }\r\n\r\n      inputComponent = document.getElementById('taskEstimate');\r\n      if(state.newTask.estimate === 0){        \r\n        inputComponent.classList.add('is-invalid');\r\n      }else{\r\n        inputComponent.classList.remove('is-invalid');\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    let inputComponent = document.getElementById('taskName');\r\n    inputComponent.classList.remove('is-invalid');\r\n    \r\n    inputComponent = document.getElementById('taskDescription');\r\n    inputComponent.classList.remove('is-invalid');\r\n    \r\n    inputComponent = document.getElementById('taskEstimate');\r\n    inputComponent.classList.remove('is-invalid');\r\n    \r\n    return true;\r\n  }\r\n\r\n  //Delete task\r\n  const deleteTask = (index) => {\r\n    setLoading();\r\n    \r\n    if (state.tasks) {\r\n      let newArr = [...state.tasks];\r\n      newArr = state.tasks.filter(t => t.id !== index );\r\n      state.tasks = newArr;\r\n    }\r\n    \r\n    dispatch({\r\n      type: DELETE_TASK,\r\n      payload: state.tasks\r\n    });    \r\n  }\r\n\r\n  //Conclude task\r\n  const concludeTask = (index) => {\r\n    setLoading();\r\n    \r\n    if (state.tasks) {\r\n      let newArr = [...state.tasks];\r\n      const ind = state.tasks.findIndex(t => t.id === index );\r\n      newArr[ind].endDate = new Date();\r\n      state.tasks = newArr;\r\n    }\r\n    \r\n    dispatch({\r\n      type: CONCLUDE_TASK,\r\n      payload: state.tasks\r\n    });\r\n  }\r\n\r\n  //Start task\r\n  const startTask = (index) => {\r\n    setLoading();\r\n\r\n    if (state.tasks) {\r\n      let newArr = [...state.tasks];\r\n      const ind = state.tasks.findIndex(t => t.id === index );\r\n      newArr[ind].startDate = new Date();\r\n      state.tasks = newArr;\r\n    }\r\n\r\n    dispatch({\r\n      type: CONCLUDE_TASK,\r\n      payload: state.tasks\r\n    });\r\n  }\r\n\r\n  //Load tasks Summary\r\n  const loadProjectSummary = () => {\r\n    let summary = {\r\n      percentageConcluded: 0,\r\n      totalHours: 0,\r\n      totalCompletedHours: 0,\r\n      totalInProcessHours: 0,\r\n      totalPlannedHours: 0\r\n    };    \r\n\r\n    if (state.tasks && state.tasks.length > 0){      \r\n      summary.totalHours = state.tasks.length;\r\n      summary.percentageConcluded = Math.round((state.tasks.filter(task => task.endDate !== null).length / state.tasks.length) * 100,2);      \r\n      summary.totalCompletedHours = state.tasks.filter(task => task.endDate !== null).length;\r\n      summary.totalInProcessHours = state.tasks.filter(task => task.endDate === null && task.startDate !== null).length;\r\n      summary.totalPlannedHours = state.tasks.filter(task => task.endDate === null && task.startDate === null).length;\r\n    }\r\n      \r\n    dispatch({\r\n      type: LOAD_SUMMARY,\r\n      payload: summary\r\n    });    \r\n  }\r\n\r\n  //Set loading\r\n  const setLoading = () => dispatch({type: SET_LOADING});\r\n\r\n  return <TaskContext.Provider\r\n    value={{\r\n      tasks: state.tasks,\r\n      newTask: state.newTask,\r\n      loading: state.loading,\r\n      percentageConcluded: state.percentageConcluded,\r\n      totalHours: state.totalHours,\r\n      totalCompletedHours: state.totalCompletedHours,\r\n      totalInProcessHours: state.totalInProcessHours,\r\n      totalPlannedHours: state.totalPlannedHours,\r\n      getTasks,\r\n      getStatus,\r\n      deleteTask,\r\n      concludeTask,\r\n      addTask,\r\n      startTask,\r\n      checkFormValidity,\r\n      loadProjectSummary\r\n    }}\r\n  >\r\n    {props.children}\r\n  </TaskContext.Provider>\r\n\r\n};\r\n\r\nexport default TaskState;\r\n\r\n"]},"metadata":{},"sourceType":"module"}