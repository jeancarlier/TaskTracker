{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanc\\\\Documents\\\\Desenvolvimento\\\\Testes\\\\TaskTracker\\\\tasktracker\\\\src\\\\components\\\\tasks\\\\TaskGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport TaskContext from '../../context/task/taskContext';\nimport Status from \"./Status\";\nimport DeleteButton from \"./DeleteButton\";\nimport CompleteButton from \"./CompleteButton\";\nimport StartButton from './StartButton';\nimport { Row, Col } from \"react-bootstrap\";\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskGrid = () => {\n  _s();\n\n  const taskContext = useContext(TaskContext);\n  useEffect(() => {\n    taskContext.getTasks();\n    taskContext.getEstimateHours(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (taskContext.loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"taskGrid table table-striped table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"twenty\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"fourty\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"ten\",\n              children: \"Estimate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"ten\",\n              children: \"State\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"fifteen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: taskContext.tasks.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"twenty\",\n              children: data.name\n            }, 'Name' + data.name + data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"fourty\",\n              children: data.description\n            }, 'Desc' + data.description + data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"ten\",\n              children: data.estimate + ' hrs'\n            }, 'Est' + data.estimate + data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"ten\",\n              children: /*#__PURE__*/_jsxDEV(Status, {\n                state: taskContext.getStatus(data)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 74\n              }, this)\n            }, 'State' + data.state + data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"ten gridActionColumn\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: taskContext.getStatus(data).value === 'Planned' ? /*#__PURE__*/_jsxDEV(StartButton, {\n                    index: data.id,\n                    status: taskContext.getStatus(data)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(CompleteButton, {\n                    index: data.id,\n                    status: taskContext.getStatus(data)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(DeleteButton, {\n                    index: data.id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, this)\n            }, 'action', false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this)]\n          }, data.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, 'taskTable', true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_s(TaskGrid, \"aD7jp1jNWC6qdX0DZmFxW9i6i8E=\");\n\n_c = TaskGrid;\nexport default TaskGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskGrid\");","map":{"version":3,"sources":["C:/Users/jeanc/Documents/Desenvolvimento/Testes/TaskTracker/tasktracker/src/components/tasks/TaskGrid.jsx"],"names":["React","useContext","useEffect","TaskContext","Status","DeleteButton","CompleteButton","StartButton","Row","Col","Spinner","TaskGrid","taskContext","getTasks","getEstimateHours","loading","tasks","map","data","name","id","description","estimate","getStatus","state","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,WAAW,GAAGX,UAAU,CAACE,WAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW,CAACC,QAAZ;AACAD,IAAAA,WAAW,CAACE,gBAAZ,GAFc,CAGd;AACD,GAJQ,EAIP,EAJO,CAAT;;AAMA,MAAIF,WAAW,CAACG,OAAhB,EAAwB;AACtB,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEK;AACH,wBACE;AAAA,6BACE;AAAwB,QAAA,SAAS,EAAC,6CAAlC;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAI,cAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAI,cAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAI,cAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAI,cAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAA,oBACKH,WAAW,CAACI,KAAZ,CAAkBC,GAAlB,CAAsBC,IAAI,iBACzB;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,QAAd;AAAA,wBAA2DA,IAAI,CAACC;AAAhE,eAA4B,SAASD,IAAI,CAACC,IAAd,GAAqBD,IAAI,CAACE,EAAtD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAI,cAAA,SAAS,EAAC,QAAd;AAAA,wBAAiEF,IAAI,CAACG;AAAtE,eAA4B,SAASH,IAAI,CAACG,WAAd,GAA2BH,IAAI,CAACE,EAA5D;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAI,cAAA,SAAS,EAAC,KAAd;AAAA,wBAAwDF,IAAI,CAACI,QAAL,GAAgB;AAAxE,eAAyB,QAAMJ,IAAI,CAACI,QAAX,GAAqBJ,IAAI,CAACE,EAAnD;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAI,cAAA,SAAS,EAAC,KAAd;AAAA,qCAAuD,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAER,WAAW,CAACW,SAAZ,CAAsBL,IAAtB;AAAf;AAAA;AAAA;AAAA;AAAA;AAAvD,eAAyB,UAAQA,IAAI,CAACM,KAAb,GAAoBN,IAAI,CAACE,EAAlD;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAI,cAAA,SAAS,EAAC,sBAAd;AAAA,qCACE,QAAC,GAAD;AAAA,wCACE,QAAC,GAAD;AAAA,4BAEER,WAAW,CAACW,SAAZ,CAAsBL,IAAtB,EAA4BO,KAA5B,KAAsC,SAAtC,gBACE,QAAC,WAAD;AAAa,oBAAA,KAAK,EAAEP,IAAI,CAACE,EAAzB;AAA6B,oBAAA,MAAM,EAAER,WAAW,CAACW,SAAZ,CAAsBL,IAAtB;AAArC;AAAA;AAAA;AAAA;AAAA,0BADF,gBAEE,QAAC,cAAD;AAAgB,oBAAA,KAAK,EAAEA,IAAI,CAACE,EAA5B;AAAgC,oBAAA,MAAM,EAAER,WAAW,CAACW,SAAZ,CAAsBL,IAAtB;AAAxC;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,wBADF,eASE,QAAC,GAAD;AAAA,yCACE,QAAC,YAAD;AAAc,oBAAA,KAAK,EAAEA,IAAI,CAACE;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,eAA0C,QAA1C;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA,aAASF,IAAI,CAACE,EAAd;AAAA;AAAA;AAAA;AAAA,kBADD;AADL;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,SAAW,WAAX;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAwCD;AACF,CArDD;;GAAMT,Q;;KAAAA,Q;AAuDN,eAAeA,QAAf","sourcesContent":["import React, {useContext, useEffect} from \"react\";\r\nimport TaskContext from '../../context/task/taskContext';\r\nimport Status from \"./Status\"\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport CompleteButton from \"./CompleteButton\";\r\nimport StartButton from './StartButton'\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport Spinner from '../layout/Spinner'\r\n\r\nconst TaskGrid = () => {\r\n  const taskContext = useContext(TaskContext);\r\n    \r\n  useEffect(() => {     \r\n    taskContext.getTasks();  \r\n    taskContext.getEstimateHours();  \r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[]);\r\n\r\n  if (taskContext.loading){\r\n    return <Spinner/>\r\n  }else{\r\n    return (\r\n      <>\r\n        <table key='taskTable'  className='taskGrid table table-striped table-bordered' >\r\n          <thead>\r\n            <tr>\r\n              <th className='twenty'>Name</th>\r\n              <th className='fourty'>Description</th>\r\n              <th className='ten'>Estimate</th>\r\n              <th className='ten'>State</th>\r\n              <th className='fifteen'></th>\r\n            </tr>\r\n          </thead>     \r\n          <tbody>          \r\n              {taskContext.tasks.map(data => (            \r\n                <tr key={data.id}>                \r\n                  <td className='twenty' key={'Name' + data.name + data.id}>{data.name}</td>\r\n                  <td className='fourty' key={'Desc' + data.description+ data.id}>{data.description}</td>\r\n                  <td className='ten' key={'Est'+data.estimate+ data.id}>{data.estimate + ' hrs'}</td>\r\n                  <td className='ten' key={'State'+data.state+ data.id} ><Status state={taskContext.getStatus(data)}/></td> \r\n                  <td className='ten gridActionColumn' key ='action'>                  \r\n                    <Row>                      \r\n                      <Col>\r\n                        { \r\n                        taskContext.getStatus(data).value === 'Planned' ? \r\n                          <StartButton index={data.id} status={taskContext.getStatus(data)} /> :\r\n                          <CompleteButton index={data.id} status={taskContext.getStatus(data)} />                    \r\n                        }\r\n                        \r\n                      </Col>\r\n                      <Col>\r\n                        <DeleteButton index={data.id}  />                  \r\n                      </Col>\r\n                    </Row>                  \r\n                  </td> \r\n                </tr>            \r\n              ))}                    \r\n          </tbody> \r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default TaskGrid;"]},"metadata":{},"sourceType":"module"}