{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanc\\\\Documents\\\\Desenvolvimento\\\\Testes\\\\TaskTracker\\\\tasktracker\\\\src\\\\components\\\\tasks\\\\TaskGrid.jsx\";\nimport React from \"react\";\nimport tasks from \"../../data.json\";\nimport State from \"./State\";\nimport TaskDeleteButton from \"./TaskDeleteButton\";\nimport TaskCompleteButton from \"./TaskCompleteButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getState = function (record) {\n  if (record.endDate != null) {\n    return {\n      value: 'Completed',\n      colorClass: 'bg-green'\n    };\n  }\n\n  if (new Date(record.beginDate) > new Date()) {\n    return {\n      value: 'Planned',\n      colorClass: 'bg-red'\n    };\n  }\n\n  return {\n    value: 'In Process',\n    colorClass: 'bg-yellow'\n  };\n};\n\nconst TaskGrid = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"taskGrid table table-striped table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Estimate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: tasks.map(data => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [data.estimate, \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(State, {\n                  state: getState(data)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"gridActionColumn\",\n                children: [/*#__PURE__*/_jsxDEV(TaskDeleteButton, {\n                  index: data.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TaskCompleteButton, {\n                  index: data.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false))\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = TaskGrid;\nexport default TaskGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskGrid\");","map":{"version":3,"sources":["C:/Users/jeanc/Documents/Desenvolvimento/Testes/TaskTracker/tasktracker/src/components/tasks/TaskGrid.jsx"],"names":["React","tasks","State","TaskDeleteButton","TaskCompleteButton","getState","record","endDate","value","colorClass","Date","beginDate","TaskGrid","map","data","name","description","estimate","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;;;AAEA,MAAMC,QAAQ,GAAG,UAASC,MAAT,EAAgB;AAE/B,MAAIA,MAAM,CAACC,OAAP,IAAkB,IAAtB,EAA2B;AACzB,WAAO;AAACC,MAAAA,KAAK,EAAE,WAAR;AAAqBC,MAAAA,UAAU,EAAE;AAAjC,KAAP;AACD;;AAED,MAAI,IAAIC,IAAJ,CAASJ,MAAM,CAACK,SAAhB,IAA6B,IAAID,IAAJ,EAAjC,EAA4C;AAC1C,WAAO;AAACF,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAAP;AACD;;AAED,SAAO;AAACD,IAAAA,KAAK,EAAE,YAAR;AAAsBC,IAAAA,UAAU,EAAE;AAAlC,GAAP;AAED,CAZD;;AAcA,MAAMG,QAAQ,GAAG,MAAM;AACrB,sBACE;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,6CAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAI,YAAA,KAAK,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,+BACE;AAAA,oBACCX,KAAK,CAACY,GAAN,CAAUC,IAAI,iBACb;AAAA,mCACE;AAAA,sCACE;AAAA,0BAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA,2BAAKF,IAAI,CAACG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA,uCAAI,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAEZ,QAAQ,CAACS,IAAD;AAAtB;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAI,gBAAA,SAAS,EAAC,kBAAd;AAAA,wCACE,QAAC,gBAAD;AAAkB,kBAAA,KAAK,EAAEA,IAAI,CAACI;AAA9B;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,kBAAD;AAAoB,kBAAA,KAAK,EAAEJ,IAAI,CAACI;AAAhC;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,2BADD;AADD;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkCD,CAnCD;;KAAMN,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport tasks from \"../../data.json\"\r\nimport State from \"./State\"\r\nimport TaskDeleteButton from \"./TaskDeleteButton\";\r\nimport TaskCompleteButton from \"./TaskCompleteButton\";\r\n\r\nconst getState = function(record){\r\n\r\n  if (record.endDate != null){\r\n    return {value: 'Completed', colorClass: 'bg-green'};\r\n  }\r\n\r\n  if (new Date(record.beginDate) > new Date()){\r\n    return {value: 'Planned', colorClass: 'bg-red'};\r\n  }\r\n\r\n  return {value: 'In Process', colorClass: 'bg-yellow'};\r\n\r\n};\r\n\r\nconst TaskGrid = () => {\r\n  return (\r\n    <>\r\n      <table className='taskGrid table table-striped table-bordered' >\r\n        <thead>\r\n          <tr>\r\n            <th scope='col'>Name</th>\r\n            <th scope='col'>Description</th>\r\n            <th scope='col'>Estimate</th>\r\n            <th scope='col'>State</th>\r\n            <th scope='col'></th>\r\n          </tr>\r\n        </thead>     \r\n        <tbody>\r\n          <>\r\n          {tasks.map(data => (\r\n            <>\r\n              <tr>\r\n                <td>{data.name}</td>\r\n                <td>{data.description}</td>\r\n                <td>{data.estimate} hrs</td>\r\n                <td><State state={getState(data)}/></td> \r\n                <td className='gridActionColumn'>\r\n                  <TaskDeleteButton index={data.id} /> \r\n                  <TaskCompleteButton index={data.id} />\r\n                </td>\r\n              </tr>\r\n            </>\r\n          ))}\r\n          </>\r\n          \r\n        </tbody> \r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskGrid;"]},"metadata":{},"sourceType":"module"}