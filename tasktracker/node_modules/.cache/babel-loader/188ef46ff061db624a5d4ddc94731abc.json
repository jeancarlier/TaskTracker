{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanc\\\\Documents\\\\Desenvolvimento\\\\Testes\\\\TaskTracker\\\\tasktracker\\\\src\\\\context\\\\task\\\\TaskState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useContext } from 'react';\nimport TaskContext from './taskContext';\nimport TaskReducer from './taskReducer';\nimport AlertContext from '../alert/alertContext';\nimport axios from 'axios';\nimport { GET_TASKS, SET_LOADING, ADD_TASK, DELETE_TASK, COMPLETE_TASK, LOAD_SUMMARY, GET_ESTIMATE } from '../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskState = props => {\n  _s();\n\n  const initialState = {\n    loading: false,\n    tasks: [],\n    newTask: {\n      id: null,\n      name: '',\n      description: '',\n      startDate: null,\n      estimate: 0,\n      endDate: null\n    },\n    percentageCompleted: 0,\n    totalHours: 0,\n    totalCompletedHours: 0,\n    totalInProcessHours: 0,\n    totalPlannedHours: 0,\n    lastIndex: 0,\n    estimateHours: []\n  };\n  const alertContext = useContext(AlertContext);\n  const [state, dispatch] = useReducer(TaskReducer, initialState);\n\n  const openAlert = (msg, variant) => {\n    console.log(variant);\n    alertContext.message = msg;\n    alertContext.variant = variant;\n    alertContext.openAlert();\n  }; //Get tasks\n\n\n  const getTasks = async () => {\n    setLoading();\n    axios.get('http://localhost:3000/tasks').then(res => {\n      dispatch({\n        type: GET_TASKS,\n        payload: res.data\n      });\n    }).catch(error => {\n      const msg = \"Fail to load tasks: \" + error.status + \" \" + error.statusText;\n      console.log(msg);\n      openAlert(msg, 'danger');\n      return [];\n    });\n  }; //Get estimate hours\n\n\n  const getEstimateHours = async () => {\n    axios.get('http://localhost:3000/hours').then(res => {\n      dispatch({\n        type: GET_ESTIMATE,\n        payload: res.data\n      });\n    }).catch(error => {\n      console.log(\"Fail to get estimate hours\");\n      return [];\n    });\n  }; //Get Task status\n\n\n  const getStatus = function (record) {\n    if (record.endDate !== null) {\n      return {\n        value: 'Completed',\n        colorClass: 'bg-green'\n      };\n    }\n\n    if (record.startDate === null) {\n      return {\n        value: 'Planned',\n        colorClass: 'bg-red'\n      };\n    }\n\n    return {\n      value: 'In Process',\n      colorClass: 'bg-yellow'\n    };\n  }; //Add task\n\n\n  const addTask = async () => {\n    setLoading();\n\n    if (state.tasks && state.newTask !== {}) {\n      const newArr = [...state.tasks];\n      state.lastIndex += 1;\n      state.newTask.id = state.lastIndex;\n      axios.post('http://localhost:3000/tasks', state.newTask).then(res => {\n        state.tasks = newArr.concat(state.newTask);\n        dispatch({\n          type: ADD_TASK,\n          payload: state.tasks\n        });\n      }).catch(error => {\n        console.log(\"Fail to add task: \" + error);\n      });\n    }\n  }; //Check form validity\n\n\n  const checkFormValidity = () => {\n    if (state.newTask.name === '' || state.newTask.description === '' || state.newTask.estimate === 0) {\n      var myform = document.getElementById(\"addTaskForm\")[0];\n\n      if (!myform.checkValidity()) {\n        if (myform.reportValidity) {\n          myform.reportValidity();\n        }\n      }\n\n      let inputComponent = document.getElementById('taskName');\n\n      if (state.newTask.name === '') {\n        inputComponent.classList.add('is-invalid');\n      } else {\n        inputComponent.classList.remove('is-invalid');\n      }\n\n      inputComponent = document.getElementById('taskDescription');\n\n      if (state.newTask.description === '') {\n        inputComponent.classList.add('is-invalid');\n      } else {\n        inputComponent.classList.remove('is-invalid');\n      }\n\n      inputComponent = document.getElementById('taskEstimate');\n\n      if (state.newTask.estimate === 0) {\n        inputComponent.classList.add('is-invalid');\n      } else {\n        inputComponent.classList.remove('is-invalid');\n      }\n\n      return false;\n    }\n\n    let inputComponent = document.getElementById('taskName');\n    inputComponent.classList.remove('is-invalid');\n    inputComponent = document.getElementById('taskDescription');\n    inputComponent.classList.remove('is-invalid');\n    inputComponent = document.getElementById('taskEstimate');\n    inputComponent.classList.remove('is-invalid');\n    return true;\n  }; //Delete task\n\n\n  const deleteTask = async index => {\n    setLoading();\n\n    if (state.tasks) {\n      axios.delete('http://localhost:3000/tasks/' + index).then(res => {\n        let newArr = [...state.tasks];\n        newArr = state.tasks.filter(t => t.id !== index);\n        state.tasks = newArr;\n        dispatch({\n          type: DELETE_TASK,\n          payload: state.tasks\n        });\n      }).catch(error => {\n        console.log(\"Fail to delete task: \" + error);\n      });\n    }\n  }; //Complete task\n\n\n  const completeTask = index => {\n    setLoading();\n\n    if (state.tasks) {\n      let newArr = [...state.tasks];\n      const ind = state.tasks.findIndex(t => t.id === index);\n      newArr[ind].endDate = new Date();\n      axios.put('http://localhost:3000/tasks/' + index, newArr[ind]).then(res => {\n        state.tasks = newArr;\n        dispatch({\n          type: COMPLETE_TASK,\n          payload: state.tasks\n        });\n      }).catch(error => {\n        console.log(\"Fail to complete task: \" + error);\n      });\n    }\n  }; //Start task\n\n\n  const startTask = index => {\n    setLoading();\n\n    if (state.tasks) {\n      let newArr = [...state.tasks];\n      const ind = state.tasks.findIndex(t => t.id === index);\n      newArr[ind].startDate = new Date();\n      axios.put('http://localhost:3000/tasks/' + index, newArr[ind]).then(res => {\n        state.tasks = newArr;\n        dispatch({\n          type: COMPLETE_TASK,\n          payload: state.tasks\n        });\n      }).catch(error => {\n        console.log(\"Fail to start the task\" + error);\n      });\n    }\n  }; //Load tasks Summary\n\n\n  const loadProjectSummary = () => {\n    let summary = {\n      percentageCompleted: 0,\n      totalHours: 0,\n      totalCompletedHours: 0,\n      totalInProcessHours: 0,\n      totalPlannedHours: 0\n    };\n\n    const sumHours = tasks => {\n      return tasks.reduce((n, _ref) => {\n        let {\n          estimate\n        } = _ref;\n        return n + parseInt(estimate);\n      }, 0);\n    };\n\n    if (state.tasks && state.tasks.length > 0) {\n      summary.percentageCompleted = Math.round(state.tasks.filter(task => task.endDate !== null).length / state.tasks.length * 100, 2);\n      summary.totalHours = sumHours(state.tasks);\n      summary.totalCompletedHours = sumHours(state.tasks.filter(task => task.endDate !== null));\n      summary.totalInProcessHours = sumHours(state.tasks.filter(task => task.endDate === null && task.startDate !== null));\n      summary.totalPlannedHours = sumHours(state.tasks.filter(task => task.endDate === null && task.startDate === null));\n    }\n\n    dispatch({\n      type: LOAD_SUMMARY,\n      payload: summary\n    });\n  }; //Set loading\n\n\n  const setLoading = () => dispatch({\n    type: SET_LOADING\n  });\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks: state.tasks,\n      newTask: state.newTask,\n      loading: state.loading,\n      percentageCompleted: state.percentageCompleted,\n      totalHours: state.totalHours,\n      totalCompletedHours: state.totalCompletedHours,\n      totalInProcessHours: state.totalInProcessHours,\n      totalPlannedHours: state.totalPlannedHours,\n      estimateHours: state.estimateHours,\n      getTasks,\n      getStatus,\n      deleteTask,\n      completeTask,\n      addTask,\n      startTask,\n      checkFormValidity,\n      loadProjectSummary,\n      getEstimateHours\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 10\n  }, this);\n};\n\n_s(TaskState, \"XI/iqefbpAsK8wBWtpxkDQFOLI8=\");\n\n_c = TaskState;\nexport default TaskState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"sources":["C:/Users/jeanc/Documents/Desenvolvimento/Testes/TaskTracker/tasktracker/src/context/task/TaskState.js"],"names":["React","useReducer","useContext","TaskContext","TaskReducer","AlertContext","axios","GET_TASKS","SET_LOADING","ADD_TASK","DELETE_TASK","COMPLETE_TASK","LOAD_SUMMARY","GET_ESTIMATE","TaskState","props","initialState","loading","tasks","newTask","id","name","description","startDate","estimate","endDate","percentageCompleted","totalHours","totalCompletedHours","totalInProcessHours","totalPlannedHours","lastIndex","estimateHours","alertContext","state","dispatch","openAlert","msg","variant","console","log","message","getTasks","setLoading","get","then","res","type","payload","data","catch","error","status","statusText","getEstimateHours","getStatus","record","value","colorClass","addTask","newArr","post","concat","checkFormValidity","myform","document","getElementById","checkValidity","reportValidity","inputComponent","classList","add","remove","deleteTask","index","delete","filter","t","completeTask","ind","findIndex","Date","put","startTask","loadProjectSummary","summary","sumHours","reduce","n","parseInt","length","Math","round","task","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,UAA3B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,SADF,EAEEC,WAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,YANF,EAOEC,YAPF,QAQO,UARP;;;AAUA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAAA;;AACzB,QAAMC,YAAY,GAAG;AACnBC,IAAAA,OAAO,EAAE,KADU;AAEnBC,IAAAA,KAAK,EAAE,EAFY;AAGnBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,EAAE,EAAE,IADG;AAEPC,MAAAA,IAAI,EAAE,EAFC;AAGPC,MAAAA,WAAW,EAAE,EAHN;AAIPC,MAAAA,SAAS,EAAE,IAJJ;AAKPC,MAAAA,QAAQ,EAAE,CALH;AAMPC,MAAAA,OAAO,EAAE;AANF,KAHU;AAWnBC,IAAAA,mBAAmB,EAAE,CAXF;AAYnBC,IAAAA,UAAU,EAAE,CAZO;AAanBC,IAAAA,mBAAmB,EAAE,CAbF;AAcnBC,IAAAA,mBAAmB,EAAE,CAdF;AAenBC,IAAAA,iBAAiB,EAAE,CAfA;AAgBnBC,IAAAA,SAAS,EAAE,CAhBQ;AAiBnBC,IAAAA,aAAa,EAAE;AAjBI,GAArB;AAoBA,QAAMC,YAAY,GAAG/B,UAAU,CAACG,YAAD,CAA/B;AAEA,QAAM,CAAC6B,KAAD,EAAQC,QAAR,IAAoBlC,UAAU,CAACG,WAAD,EAAcY,YAAd,CAApC;;AAEA,QAAMoB,SAAS,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAL,IAAAA,YAAY,CAACQ,OAAb,GAAuBJ,GAAvB;AACAJ,IAAAA,YAAY,CAACK,OAAb,GAAuBA,OAAvB;AACAL,IAAAA,YAAY,CAACG,SAAb;AACD,GALD,CAzByB,CAgCzB;;;AACA,QAAMM,QAAQ,GAAG,YAAY;AAC3BC,IAAAA,UAAU;AAEVrC,IAAAA,KAAK,CAACsC,GAAN,CAAU,6BAAV,EACCC,IADD,CACMC,GAAG,IAAI;AACXX,MAAAA,QAAQ,CAAC;AACPY,QAAAA,IAAI,EAAExC,SADC;AAEPyC,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,OAAD,CAAR;AAID,KAND,EAMGC,KANH,CAMUC,KAAD,IAAW;AAClB,YAAMd,GAAG,GAAG,yBAAwBc,KAAK,CAACC,MAA9B,GAAuC,GAAvC,GAA4CD,KAAK,CAACE,UAA9D;AACAd,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAD,MAAAA,SAAS,CAACC,GAAD,EAAM,QAAN,CAAT;AACA,aAAO,EAAP;AACD,KAXD;AAYD,GAfD,CAjCyB,CAkDvB;;;AACA,QAAMiB,gBAAgB,GAAG,YAAY;AAEnChD,IAAAA,KAAK,CAACsC,GAAN,CAAU,6BAAV,EACCC,IADD,CACOC,GAAD,IAAS;AACbX,MAAAA,QAAQ,CAAC;AACPY,QAAAA,IAAI,EAAElC,YADC;AAEPmC,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAFN,OAAD,CAAR;AAID,KAND,EAOCC,KAPD,CAOQC,KAAD,IAAW;AAChBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,aAAO,EAAP;AACD,KAVD;AAWD,GAbD,CAnDuB,CAmEzB;;;AACA,QAAMe,SAAS,GAAG,UAASC,MAAT,EAAgB;AAEhC,QAAIA,MAAM,CAAC/B,OAAP,KAAmB,IAAvB,EAA4B;AAC1B,aAAO;AAACgC,QAAAA,KAAK,EAAE,WAAR;AAAqBC,QAAAA,UAAU,EAAE;AAAjC,OAAP;AACD;;AAED,QAAIF,MAAM,CAACjC,SAAP,KAAqB,IAAzB,EAA8B;AAC5B,aAAO;AAACkC,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,UAAU,EAAE;AAA/B,OAAP;AACD;;AAED,WAAO;AAACD,MAAAA,KAAK,EAAE,YAAR;AAAsBC,MAAAA,UAAU,EAAE;AAAlC,KAAP;AACD,GAXD,CApEyB,CAiFzB;;;AACA,QAAMC,OAAO,GAAG,YAAY;AAC1BhB,IAAAA,UAAU;;AAEV,QAAIT,KAAK,CAAChB,KAAN,IAAegB,KAAK,CAACf,OAAN,KAAkB,EAArC,EAAyC;AACvC,YAAMyC,MAAM,GAAG,CAAC,GAAG1B,KAAK,CAAChB,KAAV,CAAf;AACAgB,MAAAA,KAAK,CAACH,SAAN,IAAmB,CAAnB;AACAG,MAAAA,KAAK,CAACf,OAAN,CAAcC,EAAd,GAAmBc,KAAK,CAACH,SAAzB;AAEAzB,MAAAA,KAAK,CAACuD,IAAN,CAAW,6BAAX,EAA0C3B,KAAK,CAACf,OAAhD,EACC0B,IADD,CACOC,GAAD,IAAS;AACbZ,QAAAA,KAAK,CAAChB,KAAN,GAAc0C,MAAM,CAACE,MAAP,CAAc5B,KAAK,CAACf,OAApB,CAAd;AAEAgB,QAAAA,QAAQ,CAAC;AACPY,UAAAA,IAAI,EAAEtC,QADC;AAEPuC,UAAAA,OAAO,EAAEd,KAAK,CAAChB;AAFR,SAAD,CAAR;AAID,OARD,EASCgC,KATD,CASQC,KAAD,IAAW;AAChBZ,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAsBW,KAAlC;AACD,OAXD;AAYD;AACF,GArBD,CAlFyB,CAyGzB;;;AACA,QAAMY,iBAAiB,GAAG,MAAM;AAC9B,QAAI7B,KAAK,CAACf,OAAN,CAAcE,IAAd,KAAuB,EAAvB,IAA6Ba,KAAK,CAACf,OAAN,CAAcG,WAAd,KAA8B,EAA3D,IAAiEY,KAAK,CAACf,OAAN,CAAcK,QAAd,KAA2B,CAAhG,EAAkG;AAEhG,UAAIwC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuC,CAAvC,CAAb;;AACA,UAAI,CAACF,MAAM,CAACG,aAAP,EAAL,EAA6B;AAC3B,YAAIH,MAAM,CAACI,cAAX,EAA2B;AACvBJ,UAAAA,MAAM,CAACI,cAAP;AACH;AACF;;AAED,UAAIC,cAAc,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAArB;;AACA,UAAGhC,KAAK,CAACf,OAAN,CAAcE,IAAd,KAAuB,EAA1B,EAA6B;AAC3BgD,QAAAA,cAAc,CAACC,SAAf,CAAyBC,GAAzB,CAA6B,YAA7B;AACD,OAFD,MAEK;AACHF,QAAAA,cAAc,CAACC,SAAf,CAAyBE,MAAzB,CAAgC,YAAhC;AACD;;AAEDH,MAAAA,cAAc,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAjB;;AACA,UAAGhC,KAAK,CAACf,OAAN,CAAcG,WAAd,KAA8B,EAAjC,EAAoC;AAClC+C,QAAAA,cAAc,CAACC,SAAf,CAAyBC,GAAzB,CAA6B,YAA7B;AACD,OAFD,MAEK;AACHF,QAAAA,cAAc,CAACC,SAAf,CAAyBE,MAAzB,CAAgC,YAAhC;AACD;;AAEDH,MAAAA,cAAc,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAjB;;AACA,UAAGhC,KAAK,CAACf,OAAN,CAAcK,QAAd,KAA2B,CAA9B,EAAiC;AAC/B6C,QAAAA,cAAc,CAACC,SAAf,CAAyBC,GAAzB,CAA6B,YAA7B;AACD,OAFD,MAEK;AACHF,QAAAA,cAAc,CAACC,SAAf,CAAyBE,MAAzB,CAAgC,YAAhC;AACD;;AAED,aAAO,KAAP;AACD;;AAED,QAAIH,cAAc,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAArB;AACAG,IAAAA,cAAc,CAACC,SAAf,CAAyBE,MAAzB,CAAgC,YAAhC;AAEAH,IAAAA,cAAc,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAjB;AACAG,IAAAA,cAAc,CAACC,SAAf,CAAyBE,MAAzB,CAAgC,YAAhC;AAEAH,IAAAA,cAAc,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAjB;AACAG,IAAAA,cAAc,CAACC,SAAf,CAAyBE,MAAzB,CAAgC,YAAhC;AAEA,WAAO,IAAP;AACD,GA5CD,CA1GyB,CAwJzB;;;AACA,QAAMC,UAAU,GAAG,MAAOC,KAAP,IAAiB;AAClC/B,IAAAA,UAAU;;AAEV,QAAIT,KAAK,CAAChB,KAAV,EAAiB;AAEfZ,MAAAA,KAAK,CAACqE,MAAN,CAAa,iCAA+BD,KAA5C,EACC7B,IADD,CACOC,GAAD,IAAS;AACb,YAAIc,MAAM,GAAG,CAAC,GAAG1B,KAAK,CAAChB,KAAV,CAAb;AACA0C,QAAAA,MAAM,GAAG1B,KAAK,CAAChB,KAAN,CAAY0D,MAAZ,CAAmBC,CAAC,IAAIA,CAAC,CAACzD,EAAF,KAASsD,KAAjC,CAAT;AACAxC,QAAAA,KAAK,CAAChB,KAAN,GAAc0C,MAAd;AAEAzB,QAAAA,QAAQ,CAAC;AACPY,UAAAA,IAAI,EAAErC,WADC;AAEPsC,UAAAA,OAAO,EAAEd,KAAK,CAAChB;AAFR,SAAD,CAAR;AAID,OAVD,EAWCgC,KAXD,CAWQC,KAAD,IAAW;AAChBZ,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BW,KAAtC;AACD,OAbD;AAcD;AACF,GApBD,CAzJyB,CA+KzB;;;AACA,QAAM2B,YAAY,GAAIJ,KAAD,IAAW;AAC9B/B,IAAAA,UAAU;;AAEV,QAAIT,KAAK,CAAChB,KAAV,EAAiB;AACf,UAAI0C,MAAM,GAAG,CAAC,GAAG1B,KAAK,CAAChB,KAAV,CAAb;AACA,YAAM6D,GAAG,GAAG7C,KAAK,CAAChB,KAAN,CAAY8D,SAAZ,CAAsBH,CAAC,IAAIA,CAAC,CAACzD,EAAF,KAASsD,KAApC,CAAZ;AACAd,MAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYtD,OAAZ,GAAsB,IAAIwD,IAAJ,EAAtB;AAEA3E,MAAAA,KAAK,CAAC4E,GAAN,CAAU,iCAA+BR,KAAzC,EAAgDd,MAAM,CAACmB,GAAD,CAAtD,EACClC,IADD,CACOC,GAAD,IAAS;AACbZ,QAAAA,KAAK,CAAChB,KAAN,GAAc0C,MAAd;AACAzB,QAAAA,QAAQ,CAAC;AACPY,UAAAA,IAAI,EAAEpC,aADC;AAEPqC,UAAAA,OAAO,EAAEd,KAAK,CAAChB;AAFR,SAAD,CAAR;AAID,OAPD,EAQCgC,KARD,CAQQC,KAAD,IAAW;AAChBZ,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BW,KAAxC;AACD,OAVD;AAWD;AACF,GApBD,CAhLyB,CAsMzB;;;AACA,QAAMgC,SAAS,GAAIT,KAAD,IAAW;AAC3B/B,IAAAA,UAAU;;AAEV,QAAIT,KAAK,CAAChB,KAAV,EAAiB;AACf,UAAI0C,MAAM,GAAG,CAAC,GAAG1B,KAAK,CAAChB,KAAV,CAAb;AACA,YAAM6D,GAAG,GAAG7C,KAAK,CAAChB,KAAN,CAAY8D,SAAZ,CAAsBH,CAAC,IAAIA,CAAC,CAACzD,EAAF,KAASsD,KAApC,CAAZ;AACAd,MAAAA,MAAM,CAACmB,GAAD,CAAN,CAAYxD,SAAZ,GAAwB,IAAI0D,IAAJ,EAAxB;AAEA3E,MAAAA,KAAK,CAAC4E,GAAN,CAAU,iCAA+BR,KAAzC,EAAgDd,MAAM,CAACmB,GAAD,CAAtD,EACClC,IADD,CACOC,GAAD,IAAS;AACbZ,QAAAA,KAAK,CAAChB,KAAN,GAAc0C,MAAd;AAEAzB,QAAAA,QAAQ,CAAC;AACPY,UAAAA,IAAI,EAAEpC,aADC;AAEPqC,UAAAA,OAAO,EAAEd,KAAK,CAAChB;AAFR,SAAD,CAAR;AAID,OARD,EASCgC,KATD,CASQC,KAAD,IAAW;AAChBZ,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BW,KAAvC;AACD,OAXD;AAYD;AAGF,GAvBD,CAvMyB,CAgOzB;;;AACA,QAAMiC,kBAAkB,GAAG,MAAM;AAC/B,QAAIC,OAAO,GAAG;AACZ3D,MAAAA,mBAAmB,EAAE,CADT;AAEZC,MAAAA,UAAU,EAAE,CAFA;AAGZC,MAAAA,mBAAmB,EAAE,CAHT;AAIZC,MAAAA,mBAAmB,EAAE,CAJT;AAKZC,MAAAA,iBAAiB,EAAE;AALP,KAAd;;AAQA,UAAMwD,QAAQ,GAAIpE,KAAD,IAAW;AAC1B,aAAOA,KAAK,CAACqE,MAAN,CAAa,CAACC,CAAD;AAAA,YAAI;AAAChE,UAAAA;AAAD,SAAJ;AAAA,eAAmBgE,CAAC,GAAGC,QAAQ,CAACjE,QAAD,CAA/B;AAAA,OAAb,EAAwD,CAAxD,CAAP;AACD,KAFD;;AAIA,QAAIU,KAAK,CAAChB,KAAN,IAAegB,KAAK,CAAChB,KAAN,CAAYwE,MAAZ,GAAqB,CAAxC,EAA0C;AACxCL,MAAAA,OAAO,CAAC3D,mBAAR,GAA8BiE,IAAI,CAACC,KAAL,CAAY1D,KAAK,CAAChB,KAAN,CAAY0D,MAAZ,CAAmBiB,IAAI,IAAIA,IAAI,CAACpE,OAAL,KAAiB,IAA5C,EAAkDiE,MAAlD,GAA2DxD,KAAK,CAAChB,KAAN,CAAYwE,MAAxE,GAAkF,GAA7F,EAAiG,CAAjG,CAA9B;AACAL,MAAAA,OAAO,CAAC1D,UAAR,GAAqB2D,QAAQ,CAACpD,KAAK,CAAChB,KAAP,CAA7B;AACAmE,MAAAA,OAAO,CAACzD,mBAAR,GAA8B0D,QAAQ,CAACpD,KAAK,CAAChB,KAAN,CAAY0D,MAAZ,CAAmBiB,IAAI,IAAIA,IAAI,CAACpE,OAAL,KAAiB,IAA5C,CAAD,CAAtC;AACA4D,MAAAA,OAAO,CAACxD,mBAAR,GAA8ByD,QAAQ,CAACpD,KAAK,CAAChB,KAAN,CAAY0D,MAAZ,CAAmBiB,IAAI,IAAIA,IAAI,CAACpE,OAAL,KAAiB,IAAjB,IAAyBoE,IAAI,CAACtE,SAAL,KAAmB,IAAvE,CAAD,CAAtC;AACA8D,MAAAA,OAAO,CAACvD,iBAAR,GAA4BwD,QAAQ,CAACpD,KAAK,CAAChB,KAAN,CAAY0D,MAAZ,CAAmBiB,IAAI,IAAIA,IAAI,CAACpE,OAAL,KAAiB,IAAjB,IAAyBoE,IAAI,CAACtE,SAAL,KAAmB,IAAvE,CAAD,CAApC;AACD;;AAEDY,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEnC,YADC;AAEPoC,MAAAA,OAAO,EAAEqC;AAFF,KAAD,CAAR;AAID,GAzBD,CAjOyB,CA4PzB;;;AACA,QAAM1C,UAAU,GAAG,MAAMR,QAAQ,CAAC;AAACY,IAAAA,IAAI,EAAEvC;AAAP,GAAD,CAAjC;;AAEA,sBAAO,QAAC,WAAD,CAAa,QAAb;AACL,IAAA,KAAK,EAAE;AACLU,MAAAA,KAAK,EAAEgB,KAAK,CAAChB,KADR;AAELC,MAAAA,OAAO,EAAEe,KAAK,CAACf,OAFV;AAGLF,MAAAA,OAAO,EAAEiB,KAAK,CAACjB,OAHV;AAILS,MAAAA,mBAAmB,EAAEQ,KAAK,CAACR,mBAJtB;AAKLC,MAAAA,UAAU,EAAEO,KAAK,CAACP,UALb;AAMLC,MAAAA,mBAAmB,EAAEM,KAAK,CAACN,mBANtB;AAOLC,MAAAA,mBAAmB,EAAEK,KAAK,CAACL,mBAPtB;AAQLC,MAAAA,iBAAiB,EAAEI,KAAK,CAACJ,iBARpB;AASLE,MAAAA,aAAa,EAAEE,KAAK,CAACF,aAThB;AAULU,MAAAA,QAVK;AAWLa,MAAAA,SAXK;AAYLkB,MAAAA,UAZK;AAaLK,MAAAA,YAbK;AAcLnB,MAAAA,OAdK;AAeLwB,MAAAA,SAfK;AAgBLpB,MAAAA,iBAhBK;AAiBLqB,MAAAA,kBAjBK;AAkBL9B,MAAAA;AAlBK,KADF;AAAA,cAsBJvC,KAAK,CAAC+E;AAtBF;AAAA;AAAA;AAAA;AAAA,UAAP;AAyBD,CAxRD;;GAAMhF,S;;KAAAA,S;AA0RN,eAAeA,SAAf","sourcesContent":["import React, {useReducer, useContext} from 'react';\r\nimport TaskContext from './taskContext';\r\nimport TaskReducer from './taskReducer';\r\nimport AlertContext from '../alert/alertContext';\r\n\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  GET_TASKS,\r\n  SET_LOADING,\r\n  ADD_TASK,\r\n  DELETE_TASK,\r\n  COMPLETE_TASK,\r\n  LOAD_SUMMARY,\r\n  GET_ESTIMATE\r\n} from '../types';\r\n\r\nconst TaskState = props => {\r\n  const initialState = {\r\n    loading: false,\r\n    tasks: [],\r\n    newTask: {\r\n      id: null,\r\n      name: '',\r\n      description: '',\r\n      startDate: null,\r\n      estimate: 0,\r\n      endDate: null\r\n    },\r\n    percentageCompleted: 0,\r\n    totalHours: 0,\r\n    totalCompletedHours: 0,\r\n    totalInProcessHours: 0,\r\n    totalPlannedHours: 0,\r\n    lastIndex: 0,\r\n    estimateHours: [],\r\n  };\r\n\r\n  const alertContext = useContext(AlertContext);\r\n  \r\n  const [state, dispatch] = useReducer(TaskReducer, initialState);\r\n\r\n  const openAlert = (msg, variant) => {\r\n    console.log(variant);\r\n    alertContext.message = msg;\r\n    alertContext.variant = variant;\r\n    alertContext.openAlert();\r\n  }\r\n\r\n  //Get tasks\r\n  const getTasks = async () => {\r\n    setLoading();\r\n        \r\n    axios.get('http://localhost:3000/tasks')\r\n    .then(res => {\r\n      dispatch({\r\n        type: GET_TASKS,\r\n        payload: res.data   \r\n      });        \r\n    }).catch((error) => {\r\n      const msg = \"Fail to load tasks: \"+ error.status + \" \" +error.statusText;\r\n      console.log(msg);      \r\n      openAlert(msg, 'danger');\r\n      return [];\r\n    });    \r\n  }\r\n\r\n    //Get estimate hours\r\n    const getEstimateHours = async () => {\r\n                      \r\n      axios.get('http://localhost:3000/hours')      \r\n      .then((res) => {\r\n        dispatch({\r\n          type: GET_ESTIMATE,\r\n          payload: res.data   \r\n        });        \r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Fail to get estimate hours\");\r\n        return [];\r\n      });      \r\n    }\r\n  \r\n\r\n  //Get Task status\r\n  const getStatus = function(record){\r\n\r\n    if (record.endDate !== null){\r\n      return {value: 'Completed', colorClass: 'bg-green'};\r\n    }\r\n  \r\n    if (record.startDate === null){\r\n      return {value: 'Planned', colorClass: 'bg-red'};\r\n    }\r\n  \r\n    return {value: 'In Process', colorClass: 'bg-yellow'};  \r\n  };\r\n\r\n  //Add task\r\n  const addTask = async () => {\r\n    setLoading();        \r\n    \r\n    if (state.tasks && state.newTask !== {}) {\r\n      const newArr = [...state.tasks];\r\n      state.lastIndex += 1;      \r\n      state.newTask.id = state.lastIndex;\r\n\r\n      axios.post('http://localhost:3000/tasks', state.newTask)\r\n      .then((res) => {\r\n        state.tasks = newArr.concat(state.newTask);\r\n  \r\n        dispatch({\r\n          type: ADD_TASK,\r\n          payload: state.tasks\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Fail to add task: \"+ error);\r\n      });\r\n    }\r\n  }\r\n\r\n  //Check form validity\r\n  const checkFormValidity = () => {    \r\n    if (state.newTask.name === '' || state.newTask.description === '' || state.newTask.estimate === 0){      \r\n\r\n      var myform = document.getElementById(\"addTaskForm\")[0];\r\n      if (!myform.checkValidity()) {\r\n        if (myform.reportValidity) {\r\n            myform.reportValidity();\r\n        }\r\n      }\r\n\r\n      let inputComponent = document.getElementById('taskName');\r\n      if(state.newTask.name === ''){               \r\n        inputComponent.classList.add('is-invalid');\r\n      }else{        \r\n        inputComponent.classList.remove('is-invalid');\r\n      }\r\n\r\n      inputComponent = document.getElementById('taskDescription');\r\n      if(state.newTask.description === ''){      \r\n        inputComponent.classList.add('is-invalid');\r\n      }else{\r\n        inputComponent.classList.remove('is-invalid');\r\n      }\r\n\r\n      inputComponent = document.getElementById('taskEstimate');\r\n      if(state.newTask.estimate === 0 ){        \r\n        inputComponent.classList.add('is-invalid');\r\n      }else{\r\n        inputComponent.classList.remove('is-invalid');\r\n      }\r\n\r\n      return false;\r\n    }\r\n\r\n    let inputComponent = document.getElementById('taskName');\r\n    inputComponent.classList.remove('is-invalid');\r\n    \r\n    inputComponent = document.getElementById('taskDescription');\r\n    inputComponent.classList.remove('is-invalid');\r\n    \r\n    inputComponent = document.getElementById('taskEstimate');\r\n    inputComponent.classList.remove('is-invalid');\r\n    \r\n    return true;\r\n  }\r\n\r\n  //Delete task\r\n  const deleteTask = async (index) => {\r\n    setLoading();\r\n    \r\n    if (state.tasks) {\r\n\r\n      axios.delete('http://localhost:3000/tasks/'+index)\r\n      .then((res) => {\r\n        let newArr = [...state.tasks];\r\n        newArr = state.tasks.filter(t => t.id !== index );\r\n        state.tasks = newArr;\r\n\r\n        dispatch({\r\n          type: DELETE_TASK,\r\n          payload: state.tasks\r\n        });    \r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Fail to delete task: \" + error);\r\n      });\r\n    }\r\n  }\r\n\r\n  //Complete task\r\n  const completeTask = (index) => {\r\n    setLoading();\r\n    \r\n    if (state.tasks) {\r\n      let newArr = [...state.tasks];\r\n      const ind = state.tasks.findIndex(t => t.id === index );\r\n      newArr[ind].endDate = new Date();\r\n      \r\n      axios.put('http://localhost:3000/tasks/'+index, newArr[ind])\r\n      .then((res) => {\r\n        state.tasks = newArr;      \r\n        dispatch({\r\n          type: COMPLETE_TASK,\r\n          payload: state.tasks\r\n        });    \r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Fail to complete task: \" + error);\r\n      });\r\n    }    \r\n  }\r\n\r\n  //Start task\r\n  const startTask = (index) => {\r\n    setLoading();\r\n\r\n    if (state.tasks) {\r\n      let newArr = [...state.tasks];\r\n      const ind = state.tasks.findIndex(t => t.id === index );\r\n      newArr[ind].startDate = new Date();\r\n\r\n      axios.put('http://localhost:3000/tasks/'+index, newArr[ind])\r\n      .then((res) => {\r\n        state.tasks = newArr;\r\n\r\n        dispatch({\r\n          type: COMPLETE_TASK,\r\n          payload: state.tasks\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Fail to start the task\" + error);        \r\n      })\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  //Load tasks Summary\r\n  const loadProjectSummary = () => {\r\n    let summary = {\r\n      percentageCompleted: 0,\r\n      totalHours: 0,\r\n      totalCompletedHours: 0,\r\n      totalInProcessHours: 0,\r\n      totalPlannedHours: 0\r\n    };    \r\n\r\n    const sumHours = (tasks) => {\r\n      return tasks.reduce((n, {estimate}) => n + parseInt(estimate), 0)\r\n    };\r\n\r\n    if (state.tasks && state.tasks.length > 0){         \r\n      summary.percentageCompleted = Math.round((state.tasks.filter(task => task.endDate !== null).length / state.tasks.length) * 100,2); \r\n      summary.totalHours = sumHours(state.tasks);      \r\n      summary.totalCompletedHours = sumHours(state.tasks.filter(task => task.endDate !== null));\r\n      summary.totalInProcessHours = sumHours(state.tasks.filter(task => task.endDate === null && task.startDate !== null));\r\n      summary.totalPlannedHours = sumHours(state.tasks.filter(task => task.endDate === null && task.startDate === null));\r\n    }\r\n      \r\n    dispatch({\r\n      type: LOAD_SUMMARY,\r\n      payload: summary\r\n    });    \r\n  }\r\n\r\n  //Set loading\r\n  const setLoading = () => dispatch({type: SET_LOADING});\r\n\r\n  return <TaskContext.Provider\r\n    value={{\r\n      tasks: state.tasks,\r\n      newTask: state.newTask,\r\n      loading: state.loading,\r\n      percentageCompleted: state.percentageCompleted,\r\n      totalHours: state.totalHours,\r\n      totalCompletedHours: state.totalCompletedHours,\r\n      totalInProcessHours: state.totalInProcessHours,\r\n      totalPlannedHours: state.totalPlannedHours,\r\n      estimateHours: state.estimateHours,\r\n      getTasks,\r\n      getStatus,\r\n      deleteTask,\r\n      completeTask,\r\n      addTask,\r\n      startTask,\r\n      checkFormValidity,\r\n      loadProjectSummary,\r\n      getEstimateHours\r\n    }}\r\n  >\r\n    {props.children}\r\n  </TaskContext.Provider>\r\n\r\n};\r\n\r\nexport default TaskState;\r\n\r\n"]},"metadata":{},"sourceType":"module"}