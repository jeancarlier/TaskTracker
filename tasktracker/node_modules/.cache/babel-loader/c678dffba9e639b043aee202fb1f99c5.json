{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanc\\\\Documents\\\\Desenvolvimento\\\\Testes\\\\TaskTracker\\\\tasktracker\\\\src\\\\components\\\\tasks\\\\TaskGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport State from \"./State\";\nimport TaskDeleteButton from \"./TaskDeleteButton\";\nimport TaskCompleteButton from \"./TaskCompleteButton\";\nimport TaskContext from '../../context/task/taskContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskGrid = () => {\n  _s();\n\n  const taskContext = useContext(TaskContext);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    setTasks(taskContext.getTasks());\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"taskGrid table table-striped table-bordered\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Estimate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: tasks.map(data => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: data.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [data.estimate, \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(State, {\n                  state: taskContext.getStatus(data)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"gridActionColumn\",\n                children: [/*#__PURE__*/_jsxDEV(TaskDeleteButton, {\n                  index: data.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TaskCompleteButton, {\n                  index: data.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)\n          }, void 0, false))\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(TaskGrid, \"/zd5gNfZMZAnb7bMpUHXxWJ8SF0=\");\n\n_c = TaskGrid;\nexport default TaskGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskGrid\");","map":{"version":3,"sources":["C:/Users/jeanc/Documents/Desenvolvimento/Testes/TaskTracker/tasktracker/src/components/tasks/TaskGrid.jsx"],"names":["React","useState","useContext","useEffect","State","TaskDeleteButton","TaskCompleteButton","TaskContext","TaskGrid","taskContext","tasks","setTasks","getTasks","map","data","name","description","estimate","getStatus","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,SAArC,QAAqD,OAArD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;;;AAIA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,WAAW,GAAGP,UAAU,CAACK,WAAD,CAA9B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACF,WAAW,CAACG,QAAZ,EAAD,CAAR;AACD,GAFQ,CAAT;AAIA,sBACE;AAAA,2BACE;AAAO,MAAA,SAAS,EAAC,6CAAjB;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAI,YAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAI,YAAA,KAAK,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAA,+BACE;AAAA,oBACCF,KAAK,CAACG,GAAN,CAAUC,IAAI,iBACb;AAAA,mCACE;AAAA,sCACE;AAAA,0BAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,sBAFF,eAGE;AAAA,2BAAKF,IAAI,CAACG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAIE;AAAA,uCAAI,QAAC,KAAD;AAAO,kBAAA,KAAK,EAAER,WAAW,CAACS,SAAZ,CAAsBJ,IAAtB;AAAd;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,sBAJF,eAKE;AAAI,gBAAA,SAAS,EAAC,kBAAd;AAAA,wCACE,QAAC,gBAAD;AAAkB,kBAAA,KAAK,EAAEA,IAAI,CAACK;AAA9B;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,kBAAD;AAAoB,kBAAA,KAAK,EAAEL,IAAI,CAACK;AAAhC;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,2BADD;AADD;AADF;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkCD,CA1CD;;GAAMX,Q;;KAAAA,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import React, {useState, useContext, useEffect} from \"react\";\r\nimport State from \"./State\"\r\nimport TaskDeleteButton from \"./TaskDeleteButton\";\r\nimport TaskCompleteButton from \"./TaskCompleteButton\";\r\nimport TaskContext from '../../context/task/taskContext';\r\n\r\n\r\n\r\nconst TaskGrid = () => {\r\n  const taskContext = useContext(TaskContext);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setTasks(taskContext.getTasks());\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <table className='taskGrid table table-striped table-bordered' >\r\n        <thead>\r\n          <tr>\r\n            <th scope='col'>Name</th>\r\n            <th scope='col'>Description</th>\r\n            <th scope='col'>Estimate</th>\r\n            <th scope='col'>State</th>\r\n            <th scope='col'></th>\r\n          </tr>\r\n        </thead>     \r\n        <tbody>\r\n          <>\r\n          {tasks.map(data => (\r\n            <>\r\n              <tr>\r\n                <td>{data.name}</td>\r\n                <td>{data.description}</td>\r\n                <td>{data.estimate} hrs</td>\r\n                <td><State state={taskContext.getStatus(data)}/></td> \r\n                <td className='gridActionColumn'>\r\n                  <TaskDeleteButton index={data.id} /> \r\n                  <TaskCompleteButton index={data.id} />\r\n                </td>\r\n              </tr>\r\n            </>\r\n          ))}\r\n          </>\r\n          \r\n        </tbody> \r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskGrid;"]},"metadata":{},"sourceType":"module"}