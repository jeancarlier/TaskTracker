{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanc\\\\Documents\\\\Desenvolvimento\\\\Testes\\\\TaskTracker\\\\tasktracker\\\\src\\\\components\\\\tasks\\\\AddTaskForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport TaskContext from '../../context/task/taskContext';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddTaskForm = () => {\n  _s();\n\n  const taskContext = useContext(TaskContext);\n  const {\n    newTask,\n    checkFormValidity,\n    estimateHours\n  } = taskContext;\n  const hours = estimateHours;\n\n  const onChange = e => {\n    switch (e.target.name) {\n      case 'taskName':\n        newTask.name = e.target.value;\n        break;\n\n      case 'taskDescription':\n        newTask.description = e.target.value;\n        break;\n\n      case 'taskEstimate':\n        newTask.estimate = e.target.value;\n        break;\n\n      default:\n        return null;\n    }\n\n    if (document.getElementById(e.target.name).classList.contains('is-invalid')) {\n      checkFormValidity();\n    }\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskName\",\n          className: \"col-sm-3 col-form-label\",\n          children: \"Task Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-9\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"taskName\",\n            name: \"taskName\",\n            className: \"form-control\",\n            onChange: e => onChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskDescription\",\n          className: \"col-sm-3 col-form-label\",\n          children: \"Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-9\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"taskDescription\",\n            name: \"taskDescription\",\n            rows: \"3\",\n            className: \"form-control\",\n            onChange: e => onChange(e),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"taskEstimate\",\n          className: \"col-sm-3 col-form-label\",\n          children: \"Estimate: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-9\",\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            required: true,\n            className: \"form-control\",\n            id: \"taskEstimate\",\n            name: \"taskEstimate\",\n            onChange: e => onChange(e),\n            children: hours.map(hour => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: hour,\n              children: hour\n            }, hour, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n};\n\n_s(AddTaskForm, \"D9mGJRVwgOLWqaf9f+pNisrztn8=\");\n\n_c = AddTaskForm;\nexport default AddTaskForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"sources":["C:/Users/jeanc/Documents/Desenvolvimento/Testes/TaskTracker/tasktracker/src/components/tasks/AddTaskForm.jsx"],"names":["React","useContext","TaskContext","Spinner","AddTaskForm","taskContext","newTask","checkFormValidity","estimateHours","hours","onChange","e","target","name","value","description","estimate","document","getElementById","classList","contains","loading","map","hour"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\r\nimport TaskContext from '../../context/task/taskContext';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst AddTaskForm = () => {\r\n  const taskContext = useContext(TaskContext);\r\n\r\n  const {newTask, checkFormValidity, estimateHours} = taskContext;\r\n  \r\n  const hours = estimateHours;\r\n\r\n  const onChange = (e) => {   \r\n    switch (e.target.name){\r\n      case 'taskName':        \r\n        newTask.name = e.target.value;  \r\n        break;      \r\n      case 'taskDescription':\r\n        newTask.description = e.target.value;\r\n        break;\r\n      case 'taskEstimate':        \r\n        newTask.estimate = e.target.value;  \r\n        break;  \r\n      default:\r\n        return null;        \r\n    }\r\n    if (document.getElementById(e.target.name).classList.contains('is-invalid')){\r\n      checkFormValidity();\r\n    }\r\n  }\r\n\r\n  if (loading){\r\n    return <Spinner/>\r\n  }else{  \r\n    return (    \r\n      <>\r\n        <div className='form-group row'>\r\n          <label htmlFor='taskName' className='col-sm-3 col-form-label'>Task Name: </label>\r\n          <div className='col-sm-9'>\r\n            <input \r\n              type='text' \r\n              id='taskName'\r\n              name='taskName' \r\n              className='form-control'                         \r\n              onChange={(e) => onChange(e) }\r\n              required></input>\r\n          </div>\r\n        </div>\r\n        <div className='form-group row'>\r\n          <label htmlFor='taskDescription' className='col-sm-3 col-form-label'>Description: </label>\r\n          <div className='col-sm-9'>\r\n            <textarea \r\n              id='taskDescription' \r\n              name='taskDescription'\r\n              rows='3' \r\n              className='form-control'   \r\n              onChange={(e) => onChange(e) }                           \r\n              required></textarea>\r\n          </div>\r\n        </div>     \r\n        <div className='form-group row'>\r\n          <label htmlFor='taskEstimate' className='col-sm-3 col-form-label'>Estimate: </label>\r\n          <div className='col-sm-9'>\r\n            <select required\r\n              className=\"form-control\" \r\n              id=\"taskEstimate\"\r\n              name=\"taskEstimate\"                   \r\n              onChange={(e) => onChange(e) }            \r\n              >            \r\n              {hours.map(hour => (\r\n                <option key={hour} value={hour}>{hour}</option>  \r\n              ))}            \r\n            </select>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTaskForm;\r\n"]},"metadata":{},"sourceType":"module"}