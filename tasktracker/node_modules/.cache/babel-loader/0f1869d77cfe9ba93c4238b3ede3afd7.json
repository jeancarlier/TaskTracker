{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeanc\\\\Documents\\\\Desenvolvimento\\\\Testes\\\\TaskTracker\\\\tasktracker\\\\src\\\\components\\\\tasks\\\\taskGrid.js\";\nimport React from \"react\";\nimport tasks from \"../../data.json\";\nimport State from \"\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getState = function (record) {\n  if (record.endDate != null) {\n    return 'Completed';\n  }\n\n  if (new Date(record.beginDate) > new Date()) {\n    return 'Planned';\n  }\n\n  return 'In Process';\n};\n\nconst TaskGrid = () => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"taskGrid table table-striped table-bordered\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"Estimate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          scope: \"col\",\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: tasks.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: data.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [data.estimate, \" hrs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: getState(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TaskGrid;\nexport default TaskGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskGrid\");","map":{"version":3,"sources":["C:/Users/jeanc/Documents/Desenvolvimento/Testes/TaskTracker/tasktracker/src/components/tasks/taskGrid.js"],"names":["React","tasks","State","getState","record","endDate","Date","beginDate","TaskGrid","map","data","name","description","estimate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,EAAlB;;;AAEA,MAAMC,QAAQ,GAAG,UAASC,MAAT,EAAgB;AAE/B,MAAIA,MAAM,CAACC,OAAP,IAAkB,IAAtB,EAA2B;AACzB,WAAO,WAAP;AACD;;AAED,MAAI,IAAIC,IAAJ,CAASF,MAAM,CAACG,SAAhB,IAA6B,IAAID,IAAJ,EAAjC,EAA4C;AAC1C,WAAO,SAAP;AACD;;AAED,SAAO,YAAP;AAED,CAZD;;AAcA,MAAME,QAAQ,GAAG,MAAM;AACrB,sBACE;AAAO,IAAA,SAAS,EAAC,6CAAjB;AAAA,4BACE;AAAA,6BACE;AAAA,gCACE;AAAI,UAAA,KAAK,EAAC;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAI,UAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA,gBACGP,KAAK,CAACQ,GAAN,CAAUC,IAAI,iBACb;AAAA,gCACE;AAAA,iCAAI;AAAO,YAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,qBAAKF,IAAI,CAACG,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAA,oBAAKV,QAAQ,CAACO,IAAD;AAAb;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA1BD;;KAAMF,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport tasks from \"../../data.json\"\r\nimport State from \"\"\r\n\r\nconst getState = function(record){\r\n\r\n  if (record.endDate != null){\r\n    return 'Completed';\r\n  }\r\n\r\n  if (new Date(record.beginDate) > new Date()){\r\n    return 'Planned';\r\n  }\r\n\r\n  return 'In Process';\r\n\r\n};\r\n\r\nconst TaskGrid = () => {\r\n  return (\r\n    <table className='taskGrid table table-striped table-bordered' >\r\n      <thead>\r\n        <tr>\r\n          <th scope='col'></th>\r\n          <th scope='col'>Name</th>\r\n          <th scope='col'>Description</th>\r\n          <th scope='col'>Estimate</th>\r\n          <th scope='col'>State</th>\r\n        </tr>\r\n      </thead>     \r\n      <tbody>\r\n        {tasks.map(data => (\r\n          <tr>\r\n            <td><input type='checkbox'></input></td>\r\n            <td>{data.name}</td>\r\n            <td>{data.description}</td>\r\n            <td>{data.estimate} hrs</td>\r\n            <td>{getState(data)}</td> \r\n          </tr>\r\n        ))}\r\n        \r\n      </tbody> \r\n    </table>\r\n  );\r\n};\r\n\r\nexport default TaskGrid;"]},"metadata":{},"sourceType":"module"}